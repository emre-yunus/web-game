{"version":3,"sources":["componenten/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","useState","bottles","setBottles","money","setMoney","productionEfficiency","setProductionEfficiency","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEO,SAASA,EAAOC,GACnB,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwDJ,mBAAS,GAAjE,mBAAOK,EAAP,KAA6BC,EAA7B,KAEA,OAAO,gCACH,2CAAcL,KACd,+CAAaE,KACb,yBAAQI,QAAS,kBAAML,EAAWD,EAAQI,IAA1C,qBAA0EA,EAA1E,sBACA,wBAAQE,QAAS,WACbL,EAAWD,EAAQA,GACnBG,EAASD,EAAMF,IAFnB,8BAIA,wBAAQM,QAAS,kBAAMD,EAAwBD,EAAqB,IAApE,+CCJOG,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACX,EAAD,OCMSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.29325446.chunk.js","sourcesContent":["import {useState} from \"react\";\r\n\r\nexport function Button(props) {\r\n    const [bottles, setBottles] = useState(0);\r\n    const [money, setMoney] = useState(0);\r\n    const [productionEfficiency, setProductionEfficiency] = useState(1);\r\n\r\n    return <div>\r\n        <h3>bottles: {bottles}</h3>\r\n        <h3>money: â‚¬{money}</h3>\r\n        <button onClick={() => setBottles(bottles+productionEfficiency)}>produce {productionEfficiency} bottle of water</button>\r\n        <button onClick={() => {\r\n            setBottles(bottles-bottles);\r\n            setMoney(money+bottles);\r\n        }}>sell all bottles</button>\r\n        <button onClick={() => setProductionEfficiency(productionEfficiency+1)}>increase production efficiency</button>\r\n    </div>\r\n}","import './App.css';\nimport {Button} from \"./componenten/Button\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Button></Button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}