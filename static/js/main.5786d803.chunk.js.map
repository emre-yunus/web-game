{"version":3,"sources":["componenten/Tooltips.js","context/bottleContext.js","context/capitalContext.js","context/workerContext.js","context/salesPersonContext.js","componenten/ProductionPanelContent.js","componenten/StatisticsPanelContent.js","componenten/InfoPanelContent.js","componenten/UpgradesPanelContent.js","componenten/Panel.js","componenten/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["HtmlTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","BottleContext","createContext","BottleProvider","useState","bottleAmount","setBottleAmount","productionEfficiency","setProductionEfficiency","api","useMemo","Provider","value","children","useBottleContext","useContext","CapitalContext","CapitalProvider","capitalAmount","setCapitalAmount","salesEfficiency","setSalesEfficiency","useCapitalContext","WorkerContext","WorkerProvider","workerAmount","setWorkerAmount","workerEfficiency","setWorkerEfficiency","useWorkerContext","SalesPersonContext","SalesPersonProvider","salesPersonAmount","setSalesPersonAmount","salesPersonEfficiency","setSalesPersonEfficiency","useSalesPersonContext","ProductionPanelContent","updater","setUpdater","useEffect","id","setInterval","console","log","prevBottleAmount","prevCapitalAmount","prevUpdater","window","clearInterval","Stack","mb","mt","p","spacing","direction","justifyContent","title","followCursor","Button","onClick","variant","prevWorkerAmount","prevSalesPersonAmount","StatisticsPanelContent","Box","size","InfoPanelContent","UpgradesPanelContent","startIcon","sx","Panel","Card","CardHeader","PanelContent","Dashboard","Container","fluid","Row","Col","sm","ProvidedApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5786d803.chunk.js","sourcesContent":["import {styled, Tooltip, tooltipClasses} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const HtmlTooltip = styled(({ className, ...props }) => (\r\n    <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 400,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}));","import {createContext, useContext, useMemo, useState} from \"react\";\r\n\r\nconst BottleContext = createContext();\r\n\r\nexport function BottleProvider(props) {\r\n    const [bottleAmount, setBottleAmount] = useState(0);\r\n    const [productionEfficiency, setProductionEfficiency] = useState(1);\r\n\r\n    const api = useMemo(() => ({\r\n        bottleAmount, setBottleAmount, productionEfficiency, setProductionEfficiency\r\n    }), [\r\n        bottleAmount, setBottleAmount, productionEfficiency, setProductionEfficiency\r\n    ]);\r\n\r\n    return <BottleContext.Provider value={api}>\r\n        {props.children}\r\n    </BottleContext.Provider>\r\n}\r\n\r\nexport const useBottleContext = () => useContext(BottleContext);","import {createContext, useContext, useMemo, useState} from \"react\";\r\n\r\nconst CapitalContext = createContext();\r\n\r\nexport function CapitalProvider(props) {\r\n    const [capitalAmount, setCapitalAmount] = useState(0);\r\n    const [salesEfficiency, setSalesEfficiency] = useState(1);\r\n\r\n    const api = useMemo(() => ({\r\n        capitalAmount, setCapitalAmount,salesEfficiency, setSalesEfficiency\r\n    }), [\r\n        capitalAmount, setCapitalAmount, salesEfficiency,setSalesEfficiency\r\n    ]);\r\n\r\n    return <CapitalContext.Provider value={api}>\r\n        {props.children}\r\n    </CapitalContext.Provider>\r\n}\r\n\r\nexport const useCapitalContext = () => useContext(CapitalContext);","import React, {createContext, useContext, useMemo, useState} from \"react\";\r\n\r\nconst WorkerContext = createContext();\r\n\r\nexport function WorkerProvider(props) {\r\n    const [workerAmount, setWorkerAmount] = useState(0);\r\n    const [workerEfficiency, setWorkerEfficiency] = useState(1);\r\n\r\n    const api = useMemo(() => ({\r\n        workerAmount, setWorkerAmount, workerEfficiency, setWorkerEfficiency\r\n    }), [\r\n        workerAmount, setWorkerAmount, workerEfficiency, setWorkerEfficiency\r\n    ]);\r\n\r\n    return <WorkerContext.Provider value={api}>\r\n        {props.children}\r\n    </WorkerContext.Provider>\r\n}\r\n\r\nexport const useWorkerContext = () => useContext(WorkerContext);\r\n","import React, {createContext, useContext, useMemo, useState} from \"react\";\r\n\r\nconst SalesPersonContext = createContext();\r\n\r\nexport function SalesPersonProvider(props) {\r\n    const [salesPersonAmount, setSalesPersonAmount] = useState(0);\r\n    const [salesPersonEfficiency, setSalesPersonEfficiency] = useState(1);\r\n\r\n    const api = useMemo(() => ({\r\n        salesPersonAmount, setSalesPersonAmount, salesPersonEfficiency, setSalesPersonEfficiency\r\n    }), [\r\n        salesPersonAmount, setSalesPersonAmount, salesPersonEfficiency, setSalesPersonEfficiency\r\n    ]);\r\n\r\n    return <SalesPersonContext.Provider value={api}>\r\n        {props.children}\r\n    </SalesPersonContext.Provider>\r\n}\r\n\r\nexport const useSalesPersonContext = () => useContext(SalesPersonContext);","import {Button, Stack, Tooltip} from \"@mui/material\";\r\nimport {HtmlTooltip} from \"./Tooltips\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useBottleContext} from \"../context/bottleContext\";\r\nimport {useCapitalContext} from \"../context/capitalContext\";\r\nimport {useWorkerContext} from \"../context/workerContext\";\r\nimport {useSalesPersonContext} from \"../context/salesPersonContext\";\r\n\r\nexport function ProductionPanelContent(props) {\r\n    const [updater, setUpdater] = useState(false);\r\n\r\n    const {bottleAmount, setBottleAmount, productionEfficiency} = useBottleContext();\r\n    const {capitalAmount, setCapitalAmount, salesEfficiency} = useCapitalContext();\r\n    const {workerAmount, setWorkerAmount, workerEfficiency} = useWorkerContext();\r\n    const {salesPersonAmount, setSalesPersonAmount, salesPersonEfficiency} = useSalesPersonContext();\r\n\r\n    /**\r\n     * UseEffect contains setInterval --> this loops every 1000 milliseconds\r\n     */\r\n    useEffect(() => {\r\n        const id = setInterval(() => {\r\n            console.log(\"start\")\r\n            setBottleAmount(prevBottleAmount => prevBottleAmount + workerAmount);\r\n            if(bottleAmount-salesPersonEfficiency >= 0 ) {\r\n                setBottleAmount(prevBottleAmount => prevBottleAmount - (salesPersonEfficiency * salesPersonAmount));\r\n                setCapitalAmount(prevCapitalAmount => prevCapitalAmount + (salesPersonEfficiency * salesPersonAmount));\r\n            }\r\n\r\n            /**\r\n             * This basically updates the useEffect, because state update is the only dependency.\r\n             * By using setUpdater the useEffect is independent from any other state. Without this\r\n             * we would have the following problem: when clicking on \"hire worker\" the useEffect would restart.\r\n             * With setUpdater we can keep clicking any other button while the states used in the useEffect are\r\n             * updated in real-time and the useEffect is not interrupted.\r\n             */\r\n            setUpdater(prevUpdater => !prevUpdater);\r\n\r\n            /*setTimeout(() => {\r\n                console.log(\"timeout 1\")\r\n                setBottleAmount(prevBottleAmount => prevBottleAmount + workerAmount);\r\n                setUpdater(prevUpdater => !prevUpdater);\r\n            }, 500)*/\r\n            /*setTimeout(() => {\r\n                console.log(\"timeout 2\")\r\n                setUpdater(prevUpdater => !prevUpdater);\r\n            }, 500)*/\r\n\r\n        }, 1000);\r\n        return () => window.clearInterval(id);\r\n    }, [updater]);\r\n\r\n\r\n    //manually increase bottleAmount with \"produce bottle\" button\r\n    const changeBottleAmount = () => {\r\n        setBottleAmount(prevBottleAmount => prevBottleAmount + productionEfficiency);\r\n    }\r\n\r\n    //manually increase capitalAmount and decrease bottleAmount with \"sell bottle\" button\r\n    const changeCapitalAmount = () => {\r\n        if(bottleAmount-salesEfficiency >= 0 ) {\r\n            setBottleAmount(prevBottleAmount => prevBottleAmount - salesEfficiency);\r\n            setCapitalAmount(prevCapitalAmount => prevCapitalAmount + salesEfficiency);\r\n        }\r\n    }\r\n\r\n    //manually increase workerAmount with \"hire worker\" button\r\n    const changeWorkerAmount = () => {\r\n        setWorkerAmount(prevWorkerAmount => prevWorkerAmount + 1);\r\n    }\r\n\r\n    const changeSalesPersonAmount = () => {\r\n        setSalesPersonAmount(prevSalesPersonAmount => prevSalesPersonAmount + 1);\r\n    }\r\n\r\n    /*\r\n    const changeWorkerAmount = () => {\r\n        setWorkerAmount(workerAmount + 1);\r\n        setInterval(() => {\r\n            setBottleAmount(prevBottleAmount => prevBottleAmount + 1);\r\n        }, 5000);\r\n    }\r\n\r\n    const changeSalesPersonAmount = () => {\r\n        setSalesPersonAmount(salesPersonAmount + 1);\r\n        setInterval(() => {\r\n            setBottleAmount(prevBottleAmount => prevBottleAmount - 1);\r\n            setCapitalAmount(prevCapitalAmount => prevCapitalAmount + 1);\r\n        }, 5000);\r\n    }*/\r\n\r\n    return <>\r\n        <Stack mb={5} mt={3} p={2} spacing={12} direction={\"row\"} justifyContent={\"center\"}>\r\n            <HtmlTooltip title={<>\r\n                <div>PRODUCE {productionEfficiency} BOTTLES</div>\r\n            </>} followCursor>\r\n                <Button onClick={changeBottleAmount} variant={\"contained\"}>PRODUCE BOTTLE</Button>\r\n            </HtmlTooltip>\r\n            <HtmlTooltip title={<>\r\n                <div>SELL {salesEfficiency} BOTTLES</div>\r\n            </>} followCursor>\r\n                <Button onClick={changeCapitalAmount} variant={\"contained\"} color={\"success\"}>SELL BOTTLE</Button>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n\r\n        <h4>EMPLOYEES</h4>\r\n\r\n        <Stack p={2} spacing={5} direction={\"row\"} justifyContent={\"center\"}>\r\n            <Stack spacing={3} direction={\"column\"} justifyContent={\"center\"}>\r\n                <HtmlTooltip title={<>\r\n                    <div>hire (hireWorkerEfficiency) workers</div>\r\n                </>} followCursor>\r\n                    <Button onClick={changeWorkerAmount} variant={\"contained\"}>HIRE WORKER</Button>\r\n                </HtmlTooltip>\r\n                <HtmlTooltip title={<>\r\n                    <div>hire (hireWorkerManagerEfficiency) production managers</div>\r\n                </>} followCursor>\r\n                    <Button variant={\"contained\"}>HIRE PRODUCTION MANAGER</Button>\r\n                </HtmlTooltip>\r\n            </Stack>\r\n            <Stack spacing={3} direction={\"column\"} justifyContent={\"center\"}>\r\n                <HtmlTooltip title={<>\r\n                    <div>hire (hireSalesPersonEfficiency) sales people</div>\r\n                </>} followCursor>\r\n                    <Button onClick={changeSalesPersonAmount} color=\"success\" variant={\"contained\"}>HIRE SALESPERSON</Button>\r\n                </HtmlTooltip>\r\n                <HtmlTooltip title={<>\r\n                    <div>hire (hireSalesPersonManagerEfficiency) sales managers</div>\r\n                </>} followCursor>\r\n                    <Button color=\"success\" variant={\"contained\"}>HIRE SALES MANAGER</Button>\r\n                </HtmlTooltip>\r\n            </Stack>\r\n        </Stack>\r\n    </>\r\n}","import {Stack, Box, Tooltip, Button} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {HtmlTooltip} from \"./Tooltips\";\r\nimport {useWorkerContext} from \"../context/workerContext\";\r\nimport {useBottleContext} from \"../context/bottleContext\";\r\nimport {useCapitalContext} from \"../context/capitalContext\";\r\nimport {useSalesPersonContext} from \"../context/salesPersonContext\";\r\n\r\nexport function StatisticsPanelContent(props) {\r\n    const {bottleAmount} = useBottleContext();\r\n    const {capitalAmount} = useCapitalContext();\r\n    const {workerAmount, workerEfficiency} = useWorkerContext();\r\n    const {salesPersonAmount, salesPersonEfficiency} = useSalesPersonContext();\r\n\r\n    return <>\r\n        <Stack mb={5} p={2} spacing={8} direction={\"row\"} justifyContent={\"center\"}>\r\n            <Box>\r\n                <div className={\"statTitle\"}>WATER BOTTLES</div>\r\n                <div className={\"statText\"}>{bottleAmount}</div>\r\n            </Box>\r\n            <Box>\r\n                <div className={\"statTitle\"}>CAPITAL</div>\r\n                <div className={\"statText\"}>$ {capitalAmount}</div>\r\n            </Box>\r\n        </Stack>\r\n\r\n        <h4>EMPLOYEES</h4>\r\n\r\n        <Stack p={2} spacing={2} direction={\"row\"} justifyContent={\"center\"}>\r\n            <HtmlTooltip title={<>\r\n                <div>produces {workerEfficiency} bottle(s) every second</div>\r\n            </>\r\n            } followCursor>\r\n                <Box className={\"box\"}>\r\n                    <div className={\"boxTitle\"}>WORKERS</div>\r\n                    <div className={\"boxText\"}>{workerAmount}</div>\r\n                </Box>\r\n            </HtmlTooltip>\r\n\r\n            <HtmlTooltip title={<>\r\n                <div>sells {salesPersonEfficiency} bottle(s) every second</div>\r\n            </>\r\n            } followCursor>\r\n                <Box className={\"box\"}>\r\n                    <div className={\"boxTitle\"}>SALESPEOPLE</div>\r\n                    <div className={\"boxText\"}>{salesPersonAmount}</div>\r\n                </Box>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n\r\n        {/*MANAGERS*/}\r\n\r\n        <Stack p={2} spacing={2} direction={\"row\"} justifyContent={\"center\"}>\r\n            <HtmlTooltip title={<>\r\n                <div>hires (production manager efficiency) workers every second</div>\r\n            </>\r\n            } followCursor>\r\n                <Box className={\"box\"}>\r\n                    <div className={\"boxTitle\"}>PRODUCTION MANAGERS</div>\r\n                    <div className={\"boxText\"}>(number of production managers)</div>\r\n                    <Button variant=\"contained\" size=\"small\">STOP HIRING</Button>\r\n                </Box>\r\n            </HtmlTooltip>\r\n\r\n            <HtmlTooltip title={<>\r\n                <div>hires (sales manager efficiency) salespeople every second</div>\r\n            </>\r\n            } followCursor>\r\n                <Box className={\"box\"}>\r\n                    <div className={\"boxTitle\"}>SALES MANAGERS</div>\r\n                    <div className={\"boxText\"}>(number of sales managers)</div>\r\n                    <Button color=\"success\" variant=\"contained\" size=\"small\">STOP HIRING</Button>\r\n                </Box>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n\r\n        {/*add buttons for stopping and resuming managers from hiring new workers*/}\r\n    </>\r\n}","export function InfoPanelContent(props) {\r\n    return <>info</>\r\n}","import {Box, Button, IconButton, Stack, Tooltip, tooltipClasses, styled} from \"@mui/material\";\r\nimport AccessibilityNewIcon from '@mui/icons-material/AccessibilityNew';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport {HtmlTooltip} from \"./Tooltips\";\r\nimport React from \"react\";\r\n\r\nexport function UpgradesPanelContent(props) {\r\n    return <>\r\n        <Stack p={2} spacing={2} direction={\"row\"} justifyContent={\"center\"}>\r\n            <HtmlTooltip title={<>\r\n                <h5>COST: €800</h5>\r\n                <div>Workers produce (workerEfficiency) bottles per second</div>\r\n            </>\r\n            } followCursor>\r\n                <Button variant={\"contained\"} startIcon={<AccessibilityNewIcon sx={{fontSize: 50}}/>}>\r\n                    WORKER\r\n                </Button>\r\n            </HtmlTooltip>\r\n\r\n            <HtmlTooltip title={<>\r\n                <h5>COST: €100.000</h5>\r\n                <div>Production managers hire (productionManagerEfficiency) workers per second</div>\r\n            </>\r\n            } followCursor>\r\n                <Button variant={\"contained\"} startIcon={<WorkIcon sx={{fontSize: 50}}/>}>\r\n                    PRODUCTION MANAGER\r\n                </Button>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n\r\n        <Stack p={2} spacing={2} direction={\"row\"} justifyContent={\"center\"}>\r\n            <HtmlTooltip title={<>\r\n                <h5>COST: €800</h5>\r\n                <div>Sales people sell (salesEfficiency) bottles per second</div>\r\n            </>\r\n            } followCursor>\r\n                <Button color=\"success\" variant={\"contained\"} startIcon={<AccessibilityNewIcon sx={{fontSize: 50}}/>}>\r\n                    SALESPERSON\r\n                </Button>\r\n            </HtmlTooltip>\r\n\r\n            <HtmlTooltip title={<>\r\n                <h5>COST: €100.000</h5>\r\n                <div>Sales managers hire (SalesManagerEfficiency) sales people per second</div>\r\n            </>\r\n            } followCursor>\r\n                <Button color=\"success\" variant={\"contained\"} startIcon={<WorkIcon sx={{fontSize: 50}}/>}>\r\n                    SALES MANAGER\r\n                </Button>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n    </>\r\n}","import {ProductionPanelContent} from \"./ProductionPanelContent\";\r\nimport {StatisticsPanelContent} from \"./StatisticsPanelContent\";\r\nimport {InfoPanelContent} from \"./InfoPanelContent\";\r\nimport {UpgradesPanelContent} from \"./UpgradesPanelContent\";\r\nimport {Card, CardHeader, Tooltip} from \"@mui/material\";\r\n\r\nexport function Panel(props) {\r\n    const {title} = props;\r\n    return <Card className={\"Panel\"}>\r\n        <CardHeader\r\n            title={title}\r\n            sx={{\r\n                backgroundColor: \"rgba(75,75,212,0.85)\"\r\n            }}\r\n        />\r\n        <PanelContent title={title}/>\r\n    </Card>\r\n}\r\n\r\nfunction PanelContent(props) {\r\n    const {title} = props;\r\n    if (title===\"STATISTICS\") return <StatisticsPanelContent/>\r\n    if (title===\"INFO\") return <InfoPanelContent/>\r\n    if (title===\"UPGRADES\") return <UpgradesPanelContent/>\r\n    if (title===\"PRODUCTION / MANAGEMENT\") return <ProductionPanelContent/>\r\n    return <></>\r\n}","import {Panel} from \"./Panel\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Icon from '@mui/material/Icon';\r\n\r\nexport function Dashboard(props) {\r\n    return <Container fluid>\r\n        <Row>\r\n            <Col sm={4}>\r\n                <Panel title={\"STATISTICS\"}/>\r\n            </Col>\r\n            <Col sm={4}>\r\n                <Panel title={\"INFO\"}/>\r\n                <Panel title={\"PRODUCTION / MANAGEMENT\"}/>\r\n            </Col>\r\n            <Col sm={4}>\r\n                <Panel title={\"UPGRADES\"}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}","import 'normalize.css';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Dashboard} from \"./componenten/Dashboard\";\r\nimport {WorkerProvider} from \"./context/workerContext\";\r\nimport {BottleProvider} from \"./context/bottleContext\";\r\nimport {CapitalProvider} from \"./context/capitalContext\";\r\nimport {SalesPersonProvider} from \"./context/salesPersonContext\";\r\n\r\nfunction ProvidedApp() {\r\n    return <div className=\"App\">\r\n        <Dashboard/>\r\n    </div>\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n      <BottleProvider>\r\n          <CapitalProvider>\r\n              <WorkerProvider>\r\n                  <SalesPersonProvider>\r\n                      <ProvidedApp/>\r\n                  </SalesPersonProvider>\r\n              </WorkerProvider>\r\n          </CapitalProvider>\r\n      </BottleProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}