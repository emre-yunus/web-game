{"version":3,"sources":["services/firestore.js","componenten/Tooltips.js","context/bottleContext.js","context/capitalContext.js","context/workerContext.js","context/salesPersonContext.js","context/productionManagerContext.js","context/salesManagerContext.js","context/managerHiringContext.js","context/infoContext.js","componenten/ProductionPanelContent.js","componenten/StatisticsPanelContent.js","componenten/InfoPanelContent.js","componenten/UpgradesPanelContent.js","componenten/Panel.js","componenten/Dashboard.js","services/firestoreCollection.js","componenten/LeaderBoardContent.js","componenten/LeaderBoardAccordion.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","console","log","firebase","apps","length","initializeApp","firestoreDatabase","firestore","HtmlTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","BottleContext","createContext","BottleProvider","useState","JSON","parse","localStorage","getItem","bottleAmount","setBottleAmount","productionEfficiency","setProductionEfficiency","useEffect","setItem","stringify","api","useMemo","Provider","value","children","useBottleContext","useContext","CapitalContext","CapitalProvider","capitalAmount","setCapitalAmount","salesEfficiency","setSalesEfficiency","spentCapitalAmount","setSpentCapitalAmount","useCapitalContext","WorkerContext","WorkerProvider","workerAmount","setWorkerAmount","workerEfficiency","setWorkerEfficiency","workerActive","setWorkerActive","useWorkerContext","SalesPersonContext","SalesPersonProvider","salesPersonAmount","setSalesPersonAmount","salesPersonEfficiency","setSalesPersonEfficiency","salesPersonActive","setSalesPersonActive","useSalesPersonContext","ProductionManagerContext","ProductionManagerProvider","productionManagerAmount","setProductionManagerAmount","productionManagerEfficiency","setProductionManagerEfficiency","productionManagerUpgradeBought","setProductionManagerUpgradeBought","useProductionManagerContext","SalesManagerContext","SalesManagerProvider","salesManagerAmount","setSalesManagerAmount","salesManagerEfficiency","setSalesManagerEfficiency","salesManagerUpgradeBought","setSalesManagerUpgradeBought","useSalesManagerContext","ManagerHiringContext","ManagerHiringProvider","productionManagerHiring","setProductionManagerHiring","salesManagerHiring","setSalesManagerHiring","useManagerHiringContext","InfoContext","InfoProvider","errorMessages","setErrorMessages","useInfoContext","ProductionPanelContent","updater","setUpdater","WORKER_COST","SALES_PERSON_COST","id","setInterval","prevBottleAmount","prevCapitalAmount","prevWorkerAmount","prevAmount","currentArray","concat","prevSalesPersonAmount","prevUpdater","window","clearInterval","Stack","mb","mt","p","spacing","direction","justifyContent","title","followCursor","Button","onClick","variant","prevProductionManagerAmount","prevSalesManagerAmount","StatisticsPanelContent","changeProductionManagerHiring","changeSalesManagerHiring","ProductionManagerHiringButton","forwardRef","ref","size","disabled","SalesManagerHiringButton","Box","toLocaleString","InfoPanelContent","map","val","key","JustPrintIt","message","glow","setGlow","timer1","setTimeout","clearTimeout","Alert","severity","UpgradesPanelContent","buyWorkerUpgrade","buySalesPersonUpgrade","buyProductionManagerUpgrade","buySalesManagerUpgrade","WorkerUpgradeButton","startIcon","sx","SalesPersonUpgradeButton","ProductionManagerUpgradeButton","SalesManagerUpgradeButton","Panel","Card","height","CardHeader","PanelContent","Dashboard","Container","fluid","Row","Col","sm","getCollectionFromDb","collection","a","get","result","empty","docs","doc","data","LeaderBoardContent","page","setPage","rowsPerPage","setRowsPerPage","usersFromDb","setUsersFromDb","loadUsers","users","columns","label","minWidth","format","rows","u","i","score","totalCapital","sort","b","parseFloat","Paper","width","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","align","colSpan","column","style","top","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","onPageChange","event","newPage","onRowsPerPageChange","target","count","LeaderBoardAccordion","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","ProvidedApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAIMA,G,OAAiB,CACnBC,OAAQC,0CACRC,WAAYD,+CACZE,UAAWF,iCAEfG,QAAQC,IAAI,CAACN,mBAGRO,IAASC,KAAKC,QAAQF,IAASG,cAAcV,GAC3C,IAAMW,EAAoBX,EAAeI,WAAaG,IAASK,YAElED,EACAN,QAAQC,IAAR,gCAEAD,QAAQC,IAAR,oC,oGCfSO,EAAcC,aAAO,gBAAGC,EAAH,EAAGA,UAAcC,EAAjB,wBAC9B,cAACC,EAAA,EAAD,2BAAaD,GAAb,IAAoBE,QAAS,CAAEC,OAAQJ,QADhBD,EAExB,gBAAGM,EAAH,EAAGA,MAAH,mCACQC,IAAeC,SAAY,CAC9BC,gBAAiB,UACjBC,MAAO,sBACPC,SAAU,IACVC,SAAUN,EAAMO,WAAWC,QAAQ,IACnCC,OAAQ,yBCTVC,EAAgBC,0BAEf,SAASC,EAAehB,GAC3B,MAAwCiB,oBAAS,WAE7C,OAD0BC,KAAKC,MAAMC,aAAaC,QAAQ,kBAC9B,KAFhC,mBAAOC,EAAP,KAAqBC,EAArB,KAIA,EAAwDN,oBAAS,WAE7D,OADkCC,KAAKC,MAAMC,aAAaC,QAAQ,0BAC9B,KAFxC,mBAAOG,EAAP,KAA6BC,EAA7B,KAKAC,qBAAU,kBAAMN,aAAaO,QAAQ,eAAgBT,KAAKU,UAAUN,MAAgB,CAACA,IACrFI,qBAAU,kBAAMN,aAAaO,QAAQ,uBAAwBT,KAAKU,UAAUJ,MAAwB,CAACA,IAErG,IAAMK,EAAMC,mBAAQ,iBAAO,CACvBR,eAAcC,kBAAiBC,uBAAsBC,6BACrD,CACAH,EAAcC,EAAiBC,EAAsBC,IAGzD,OAAO,cAACX,EAAciB,SAAf,CAAwBC,MAAOH,EAA/B,SACF7B,EAAMiC,WAIR,IAAMC,EAAmB,kBAAMC,qBAAWrB,IC1B3CsB,EAAiBrB,0BAEhB,SAASsB,EAAgBrC,GAC5B,MAA0CiB,oBAAS,WAE/C,OAD2BC,KAAKC,MAAMC,aAAaC,QAAQ,mBAC9B,KAFjC,mBAAOiB,EAAP,KAAsBC,EAAtB,KAIA,EAA8CtB,oBAAS,WAEnD,OAD6BC,KAAKC,MAAMC,aAAaC,QAAQ,qBAC9B,KAFnC,mBAAOmB,EAAP,KAAwBC,EAAxB,KAIA,EAAoDxB,oBAAS,WACzD,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,wBAA0B,KADrE,mBAAOqB,EAAP,KAA2BC,EAA3B,KAIAjB,qBAAU,kBAAMN,aAAaO,QAAQ,gBAAiBT,KAAKU,UAAUU,MAAiB,CAACA,IACvFZ,qBAAU,kBAAMN,aAAaO,QAAQ,kBAAmBT,KAAKU,UAAUY,MAAmB,CAACA,IAC3Fd,qBAAU,kBAAMN,aAAaO,QAAQ,qBAAsBT,KAAKU,UAAUc,MAAsB,CAACA,IAEjG,IAAMb,EAAMC,mBAAQ,iBAAO,CACvBQ,gBAAeC,mBAAiBC,kBAAiBC,qBAAoBC,qBAAoBC,2BACzF,CACAL,EAAeC,EAAkBC,EAAgBC,EAAoBC,EAAoBC,IAG7F,OAAO,cAACP,EAAeL,SAAhB,CAAyBC,MAAOH,EAAhC,SACF7B,EAAMiC,WAIR,IAAMW,EAAoB,kBAAMT,qBAAWC,IC9B5CS,EAAgB9B,0BAEf,SAAS+B,EAAe9C,GAC3B,MAAwCiB,oBAAS,WAE7C,OAD0BC,KAAKC,MAAMC,aAAaC,QAAQ,kBAC9B,KAFhC,mBAAO0B,EAAP,KAAqBC,EAArB,KAIA,EAAgD/B,oBAAS,WAErD,OAD8BC,KAAKC,MAAMC,aAAaC,QAAQ,sBAC9B,KAFpC,mBAAO4B,EAAP,KAAyBC,EAAzB,KAIA,EAAwCjC,oBAAS,WAC7C,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,mBAAoB,KAD/D,mBAAO8B,EAAP,KAAqBC,EAArB,KAIA1B,qBAAU,kBAAMN,aAAaO,QAAQ,eAAgBT,KAAKU,UAAUmB,MAAgB,CAACA,IACrFrB,qBAAU,kBAAMN,aAAaO,QAAQ,mBAAoBT,KAAKU,UAAUqB,MAAoB,CAACA,IAC7FvB,qBAAU,kBAAMN,aAAaO,QAAQ,eAAgBT,KAAKU,UAAUuB,MAAgB,CAACA,IAErF,IAAMtB,EAAMC,mBAAQ,iBAAO,CACvBiB,eAAcC,kBAAiBC,mBAAkBC,sBAAqBC,eAAcC,qBACpF,CACAL,EAAcC,EAAiBC,EAAkBC,EAAqBC,EAAcC,IAGxF,OAAO,cAACP,EAAcd,SAAf,CAAwBC,MAAOH,EAA/B,SACF7B,EAAMiC,WAIR,IAAMoB,EAAmB,kBAAMlB,qBAAWU,IC9B3CS,EAAqBvC,0BAEpB,SAASwC,EAAoBvD,GAChC,MAAkDiB,oBAAS,WAEvD,OAD+BC,KAAKC,MAAMC,aAAaC,QAAQ,uBAC9B,KAFrC,mBAAOmC,EAAP,KAA0BC,EAA1B,KAIA,EAA0DxC,oBAAS,WAE/D,OADmCC,KAAKC,MAAMC,aAAaC,QAAQ,2BAC9B,KAFzC,mBAAOqC,EAAP,KAA8BC,EAA9B,KAIA,EAAkD1C,oBAAS,WACvD,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,wBAAyB,KADpE,mBAAOuC,EAAP,KAA0BC,EAA1B,KAIAnC,qBAAU,kBAAMN,aAAaO,QAAQ,oBAAqBT,KAAKU,UAAU4B,MAAqB,CAACA,IAC/F9B,qBAAU,kBAAMN,aAAaO,QAAQ,wBAAyBT,KAAKU,UAAU8B,MAAyB,CAACA,IACvGhC,qBAAU,kBAAMN,aAAaO,QAAQ,oBAAqBT,KAAKU,UAAUgC,MAAqB,CAACA,IAE/F,IAAM/B,EAAMC,mBAAQ,iBAAO,CACvB0B,oBAAmBC,uBAAsBC,wBAAuBC,2BAA0BC,oBAAmBC,0BAC7G,CACAL,EAAmBC,EAAsBC,EAAuBC,EAA0BC,EAAmBC,IAGjH,OAAO,cAACP,EAAmBvB,SAApB,CAA6BC,MAAOH,EAApC,SACF7B,EAAMiC,WAIR,IAAM6B,EAAwB,kBAAM3B,qBAAWmB,IC9BhDS,EAA2BhD,0BAE1B,SAASiD,EAA0BhE,GACtC,MAA8DiB,oBAAS,WAEnE,OADqCC,KAAKC,MAAMC,aAAaC,QAAQ,6BAC9B,KAF3C,mBAAO4C,EAAP,KAAgCC,EAAhC,KAIA,EAAsEjD,oBAAS,WAE3E,OADyCC,KAAKC,MAAMC,aAAaC,QAAQ,iCAC9B,KAF/C,mBAAO8C,EAAP,KAAoCC,EAApC,KAIA,EAA4EnD,oBAAS,WACjF,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,qCAAsC,KADjF,mBAAOgD,EAAP,KAAuCC,EAAvC,KAIA5C,qBAAU,kBAAMN,aAAaO,QAAQ,0BAA2BT,KAAKU,UAAUqC,MAA2B,CAACA,IAC3GvC,qBAAU,kBAAMN,aAAaO,QAAQ,8BAA+BT,KAAKU,UAAUuC,MAA+B,CAACA,IACnHzC,qBAAU,kBAAMN,aAAaO,QAAQ,iCAAkCT,KAAKU,UAAUyC,MAAkC,CAACA,IAEzH,IAAMxC,EAAMC,mBAAQ,iBAAO,CACvBmC,0BAAyBC,6BAA4BC,8BAA6BC,iCAAgCC,iCAAgCC,uCAClJ,CACAL,EAAyBC,EAA4BC,EAA6BC,EAAgCC,EAAgCC,IAGtJ,OAAO,cAACP,EAAyBhC,SAA1B,CAAmCC,MAAOH,EAA1C,SACF7B,EAAMiC,WAIR,IAAMsC,EAA8B,kBAAMpC,qBAAW4B,IC9BtDS,EAAsBzD,0BAErB,SAAS0D,EAAqBzE,GACjC,MAAoDiB,oBAAS,WAEzD,OADgCC,KAAKC,MAAMC,aAAaC,QAAQ,wBAC9B,KAFtC,mBAAOqD,EAAP,KAA2BC,EAA3B,KAIA,EAA4D1D,oBAAS,WAEjE,OADoCC,KAAKC,MAAMC,aAAaC,QAAQ,4BAC9B,KAF1C,mBAAOuD,EAAP,KAA+BC,EAA/B,KAIA,EAAkE5D,oBAAS,WACvE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,gCAAiC,KAD5E,mBAAOyD,EAAP,KAAkCC,EAAlC,KAIArD,qBAAU,kBAAMN,aAAaO,QAAQ,qBAAsBT,KAAKU,UAAU8C,MAAsB,CAACA,IACjGhD,qBAAU,kBAAMN,aAAaO,QAAQ,yBAA0BT,KAAKU,UAAUgD,MAA0B,CAACA,IACzGlD,qBAAU,kBAAMN,aAAaO,QAAQ,4BAA6BT,KAAKU,UAAUkD,MAA6B,CAACA,IAE/G,IAAMjD,EAAMC,mBAAQ,iBAAO,CACvB4C,qBAAoBC,wBAAuBC,yBAAwBC,4BAA2BC,4BAA2BC,kCACzH,CACAL,EAAoBC,EAAuBC,EAAwBC,EAA2BC,EAA2BC,IAG7H,OAAO,cAACP,EAAoBzC,SAArB,CAA8BC,MAAOH,EAArC,SACF7B,EAAMiC,WAIR,IAAM+C,EAAyB,kBAAM7C,qBAAWqC,IC9BjDS,EAAuBlE,0BAEtB,SAASmE,EAAsBlF,GAClC,MAA8DiB,oBAAS,WAEnE,OADqCC,KAAKC,MAAMC,aAAaC,QAAQ,8BAC9B,KAF3C,mBAAO8D,EAAP,KAAgCC,EAAhC,KAIA,EAAoDnE,oBAAS,WAEzD,OADgCC,KAAKC,MAAMC,aAAaC,QAAQ,yBAC9B,KAFtC,mBAAOgE,EAAP,KAA2BC,EAA3B,KAKA5D,qBAAU,kBAAMN,aAAaO,QAAQ,0BAA2BT,KAAKU,UAAUuD,MAA2B,CAACA,IAC3GzD,qBAAU,kBAAMN,aAAaO,QAAQ,qBAAsBT,KAAKU,UAAUyD,MAAsB,CAACA,IAEjG,IAAMxD,EAAMC,mBAAQ,iBAAO,CACvBqD,0BAAyBC,6BAA4BC,qBAAoBC,2BACzE,CACAH,EAAyBC,EAA4BC,EAAoBC,IAG7E,OAAO,cAACL,EAAqBlD,SAAtB,CAA+BC,MAAOH,EAAtC,SACF7B,EAAMiC,WAIR,IAAMsD,EAA0B,kBAAMpD,qBAAW8C,IC1BlDO,EAAczE,0BAEb,SAAS0E,EAAazF,GACzB,MAA0CiB,mBAAS,IAAnD,mBAAOyE,EAAP,KAAsBC,EAAtB,KAEM9D,EAAMC,mBAAQ,iBAAO,CACvB4D,gBAAeC,sBACf,CACAD,EAAeC,IAGnB,OAAO,cAACH,EAAYzD,SAAb,CAAsBC,MAAOH,EAA7B,SACF7B,EAAMiC,WAIR,IAAM2D,EAAiB,kBAAMzD,qBAAWqD,ICNxC,SAASK,EAAuB7F,GAEnC,MAA8BiB,oBAAS,GAAvC,mBAAO6E,EAAP,KAAgBC,EAAhB,KAGA,EAA8D7D,IAAvDZ,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,gBAAiBC,EAAtC,EAAsCA,qBACtC,EAAkFoB,IAA3EN,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,iBAAkBC,EAAxC,EAAwCA,gBAAiBG,EAAzD,EAAyDA,sBACzD,EAAwEU,IAAjEN,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,gBAAmCG,GAAxD,EAAsCF,iBAAtC,EAAwDE,cACxD,EAA4FW,IAArFN,EAAP,EAAOA,kBAAmBC,EAA1B,EAA0BA,qBAAsBC,EAAhD,EAAgDA,sBAAuBE,EAAvE,EAAuEA,kBACvE,EAA2HW,IAApHN,EAAP,EAAOA,wBAAyBC,EAAhC,EAAgCA,2BAA4BC,EAA5D,EAA4DA,4BAA6BE,EAAzF,EAAyFA,+BACzF,EAAuGW,IAAhGN,EAAP,EAAOA,mBAAoBC,EAA3B,EAA2BA,sBAAuBC,EAAlD,EAAkDA,uBAAwBE,EAA1E,EAA0EA,0BAC1E,EAA8DS,IAAvDJ,EAAP,EAAOA,wBAAyBC,EAAhC,EAAgCA,2BAChC,EAAoDG,IAA7CF,EAAP,EAAOA,mBAAoBC,EAA3B,EAA2BA,sBAC3B,EAA0CM,IAApBD,IAAtB,EAAOD,cAAP,EAAsBC,kBAEhBK,GAAc,GACdC,GAAoB,GAO1BvE,qBAAU,WACN,IAAMwE,EAAKC,aAAY,WACnB9G,QAAQC,IAAI,eACZiC,GAAgB,SAAA6E,GAAgB,OAAIA,EAAmBrD,KACpDzB,EAAcoC,EAAsBF,GAAsB,IACzDjC,GAAgB,SAAA6E,GAAgB,OAAIA,EAAoB1C,EAAwBF,KAChFjB,GAAiB,SAAA8D,GAAiB,OAAIA,EAAqB3C,EAAwBF,MAIpF2B,IACI7C,GAAiB0D,IAAe/B,EAA0B,GACzDjB,GAAgB,SAAAsD,GAAgB,OAAIA,EAAoBrC,EAA0BE,KAClF5B,GAAiB,SAAAgE,GAAU,OAAIA,EAAaP,MAC5CrD,GAAsB,SAAA4D,GAAU,OAAIA,EAAaP,QAEjDL,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OACzCxC,EAAwB,EAAK,gEAAkE,+CACpGmB,GAA2B,KAGhCC,IACI/C,GAAiB2D,IAAqBvB,EAAqB,GAC1DjB,GAAqB,SAAAiD,GAAqB,OAAIA,EAAyBhC,EAAqBE,KAC5FrC,GAAiB,SAAAgE,GAAU,OAAIA,EAAaN,MAC5CtD,GAAsB,SAAA4D,GAAU,OAAIA,EAAaN,QAEjDN,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OACzC/B,EAAqB,EAAK,+DAAiE,0CAChGY,GAAsB,KAW9BS,GAAW,SAAAY,GAAW,OAAKA,OAY5B,KACH,OAAO,kBAAMC,OAAOC,cAAcX,MACnC,CAACJ,IA+EJ,OAAO,qCACH,eAACgB,EAAA,EAAD,CAAOC,GAAI,EAAGC,GAAI,EAAGC,EAAG,EAAGC,QAAS,GAAIC,UAAW,MAAOC,eAAgB,SAA1E,UACI,cAACvH,EAAD,CAAawH,MAAO,mCAChB,2CAAc7F,EAAd,gBACC8F,cAAY,EAFjB,SAGI,cAACC,EAAA,EAAD,CAAQC,QAhFO,WACvBjG,GAAgB,SAAA6E,GAAgB,OAAIA,EAAmB5E,MA+EViG,QAAS,YAA9C,8BAEJ,cAAC5H,EAAD,CAAawH,MAAO,mCAChB,wCAAW7E,EAAX,gBACC8E,cAAY,EAFjB,SAGI,cAACC,EAAA,EAAD,CAAQC,QAhFQ,WACrBlG,EAAakB,GAAmB,GAC/BjB,GAAgB,SAAA6E,GAAgB,OAAIA,EAAmB5D,KACvDD,GAAiB,SAAA8D,GAAiB,OAAIA,EAAoB7D,MAE1DmD,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,2BA2EXgB,QAAS,YAAajH,MAAO,UAAnE,8BAIR,2CAEA,eAACsG,EAAA,EAAD,CAAOG,EAAG,EAAGC,QAAS,EAAGC,UAAW,MAAOC,eAAgB,SAA3D,UACI,eAACN,EAAA,EAAD,CAAOI,QAAS,EAAGC,UAAW,SAAUC,eAAgB,SAAxD,UACI,cAACvH,EAAD,CAAawH,MAAO,qCAChB,yCAAYrB,MACZ,mDACCsB,cAAY,EAHjB,SAII,cAACC,EAAA,EAAD,CAAQC,QAjFG,WACpBrE,EACIb,GAAiB0D,IAChBhD,GAAgB,SAAAsD,GAAgB,OAAIA,EAAmB,KACvD/D,GAAiB,SAAAgE,GAAU,OAAIA,EAAaP,MAC5CrD,GAAsB,SAAA4D,GAAU,OAAIA,EAAaP,OAEjDL,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,4BAGzDd,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,sDAuERgB,QAAS,YAA9C,2BAEJ,cAAC5H,EAAD,CAAawH,MAAO,qCAChB,yCApKgB,MAqKhB,+DACCC,cAAY,EAHjB,SAII,cAACC,EAAA,EAAD,CAAQC,QAzDc,WAC/BnD,EACI/B,GAhHqB,IAiHpB4B,GAA2B,SAAAwD,GAA2B,OAAIA,EAA8B,KACxFnF,GAAiB,SAAAgE,GAAU,OAAIA,EAlHX,MAmHpB5D,GAAsB,SAAA4D,GAAU,OAAIA,EAnHhB,OAqHpBZ,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,4BAGzDd,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,8DA+CGgB,QAAS,YAAzD,0CAGR,eAACX,EAAA,EAAD,CAAOI,QAAS,EAAGC,UAAW,SAAUC,eAAgB,SAAxD,UACI,cAACvH,EAAD,CAAawH,MAAO,qCAChB,yCAAYpB,MACZ,wDACCqB,cAAY,EAHjB,SAII,cAACC,EAAA,EAAD,CAAQC,QAhFQ,WACzB5D,EACItB,GAAiB2D,IAChBxC,GAAqB,SAAAiD,GAAqB,OAAIA,EAAwB,KACtEnE,GAAiB,SAAAgE,GAAU,OAAIA,EAAaN,MAC5CtD,GAAsB,SAAA4D,GAAU,OAAIA,EAAaN,OAEjDN,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,4BAGzDd,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,+DAsEHjG,MAAM,UAAUiH,QAAS,YAAnE,gCAEJ,cAAC5H,EAAD,CAAawH,MAAO,qCAChB,yCAjLW,MAkLX,0DACCC,cAAY,EAHjB,SAII,cAACC,EAAA,EAAD,CAAQC,QAxDS,WAC1B1C,EACIxC,GA9HgB,IA+HfqC,GAAsB,SAAAgD,GAAsB,OAAIA,EAAyB,KACzEpF,GAAiB,SAAAgE,GAAU,OAAIA,EAhIhB,MAiIf5D,GAAsB,SAAA4D,GAAU,OAAIA,EAjIrB,OAmIfZ,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,4BAGzDd,IAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,yDA8CFjG,MAAM,UAAUiH,QAAS,YAApE,2C,aCvMb,SAASG,EAAuB5H,GAEnC,IAAOsB,EAAgBY,IAAhBZ,aACAgB,EAAiBM,IAAjBN,cACP,EAAyCe,IAAlCN,EAAP,EAAOA,aAAcE,EAArB,EAAqBA,iBACrB,EAAmDa,IAA5CN,EAAP,EAAOA,kBAAmBE,EAA1B,EAA0BA,sBAC1B,EAA2Ha,IAApHN,EAAP,EAAOA,wBAAqDE,GAA5D,EAAgCD,2BAAhC,EAA4DC,6BAA6BE,EAAzF,EAAyFA,+BACzF,EAAuGW,IAAhGN,EAAP,EAAOA,mBAA2CE,GAAlD,EAA2BD,sBAA3B,EAAkDC,wBAAwBE,EAA1E,EAA0EA,0BAC1E,EAA8DS,IAAvDJ,EAAP,EAAOA,wBAAyBC,EAAhC,EAAgCA,2BAChC,EAAoDG,IAA7CF,EAAP,EAAOA,mBAAoBC,EAA3B,EAA2BA,sBAErBuC,EAAgC,WAClCzC,GAA4BD,IAG1B2C,EAA2B,WAC7BxC,GAAuBD,IAIrB0C,EAAgCC,sBAAW,SAAChI,EAAOiI,GACrD,OAAG5D,EACQ,cAACkD,EAAA,EAAD,CAAQC,QAASK,EAA+BJ,QAAQ,YAAYS,KAAK,QAAzE,SAAkF/C,EAA0B,cAAgB,iBAE5H,cAACoC,EAAA,EAAD,CAAQC,QAASK,EAA+BJ,QAAQ,YAAYS,KAAK,QAAQC,UAAQ,EAAzF,SAA2FhD,EAA0B,cAAgB,oBAG9IiD,EAA2BJ,sBAAW,SAAChI,EAAOiI,GAChD,OAAGnD,EACQ,cAACyC,EAAA,EAAD,CAAQC,QAASM,EAA0BtH,MAAM,UAAUiH,QAAQ,YAAYS,KAAK,QAApF,SAA6F7C,EAAqB,cAAgB,iBAElI,cAACkC,EAAA,EAAD,CAAQC,QAASM,EAA0BtH,MAAM,UAAUiH,QAAQ,YAAYS,KAAK,QAAQC,UAAQ,EAApG,SAAsG9C,EAAqB,cAAgB,oBAI1J,OAAO,qCACH,eAACyB,EAAA,EAAD,CAAOC,GAAI,EAAGE,EAAG,EAAGC,QAAS,EAAGC,UAAW,MAAOC,eAAgB,SAAlE,UACI,eAACiB,EAAA,EAAD,WACI,qBAAKtI,UAAW,YAAhB,2BACA,qBAAKA,UAAW,WAAhB,SAA6BuB,EAAagH,eAAe,cAE7D,eAACD,EAAA,EAAD,WACI,qBAAKtI,UAAW,YAAhB,qBACA,sBAAKA,UAAW,WAAhB,eAA+BuC,EAAcgG,eAAe,kBAIpE,2CAEA,eAACxB,EAAA,EAAD,CAAOG,EAAG,EAAGC,QAAS,EAAGC,UAAW,MAAOC,eAAgB,SAA3D,UACI,cAACvH,EAAD,CAAawH,MAAO,mCAChB,4CAAepE,EAAf,+BAEFqE,cAAY,EAHd,SAII,eAACe,EAAA,EAAD,CAAKtI,UAAW,MAAhB,UACI,qBAAKA,UAAW,WAAhB,qBACA,qBAAKA,UAAW,UAAhB,SAA4BgD,SAIpC,cAAClD,EAAD,CAAawH,MAAO,mCAChB,yCAAY3D,EAAZ,+BAEF4D,cAAY,EAHd,SAII,eAACe,EAAA,EAAD,CAAKtI,UAAW,MAAhB,UACI,qBAAKA,UAAW,WAAhB,yBACA,qBAAKA,UAAW,UAAhB,SAA4ByD,YAOxC,eAACsD,EAAA,EAAD,CAAOG,EAAG,EAAGC,QAAS,EAAGC,UAAW,MAAOC,eAAgB,SAA3D,UACI,cAACvH,EAAD,CAAawH,MAAO,mCAChB,yCAAYlD,EAAZ,+BAEFmD,cAAY,EAHd,SAII,eAACe,EAAA,EAAD,CAAKtI,UAAW,MAAhB,UACI,qBAAKA,UAAW,WAAhB,iCACA,qBAAKA,UAAW,UAAhB,SAA4BkE,IAC5B,cAAC8D,EAAD,SAIR,cAAClI,EAAD,CAAawH,MAAO,mCAChB,yCAAYzC,EAAZ,6CAEF0C,cAAY,EAHd,SAII,eAACe,EAAA,EAAD,CAAKtI,UAAW,MAAhB,UACI,qBAAKA,UAAW,WAAhB,4BACA,qBAAKA,UAAW,UAAhB,SAA4B2E,IAC5B,cAAC0D,EAAD,e,aCxFb,SAASG,EAAiBvI,GAC7B,MAA0C4F,IAAnCF,EAAP,EAAOA,cAAP,EAAsBC,iBAEtB,OAAO,8BACFD,EAAc8C,KAAI,SAACC,EAAKC,GAAN,OAAc,cAACC,EAAD,CAAuBC,QAASH,GAAdC,QAI3D,SAASC,EAAY3I,GACjB,IAAO4I,EAAW5I,EAAX4I,QACP,EAAwB3H,oBAAS,GAAjC,mBAAO4H,EAAP,KAAaC,EAAb,KASA,OAPApH,qBAAU,WACN,IAAIqH,EAASC,YAAW,kBAAMF,GAAQ,KAAQ,KAC9C,OAAO,WACHG,aAAaF,MAElB,CAACF,IAEDA,EAAa,cAACK,EAAA,EAAD,CAAOzB,QAAQ,WAAW0B,SAAS,QAAnC,SAA4CP,IACtD,6B,yCCvBH,SAASQ,GAAqBpJ,GACjC,MAAsG4C,IAA/FN,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,iBAAkBC,EAAxC,EAAwCA,gBAAqCG,GAA7E,EAAyDD,mBAAzD,EAA6EC,uBAC7E,EAA0DU,IAAnDJ,EAAP,EAAOA,iBAAkBE,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,gBACvC,EAAyEU,IAA3CF,GAA9B,EAAOF,sBAAP,EAA8BE,mBAAmBC,EAAjD,EAAiDA,qBACjD,EAAyGU,IAAlGJ,EAAP,EAAOA,4BAA6BE,EAApC,EAAoCA,+BAAgCC,EAApE,EAAoEA,kCACpE,EAA0FU,IAAnFJ,EAAP,EAAOA,uBAAwBE,EAA/B,EAA+BA,0BAA2BC,EAA1D,EAA0DA,6BAC1D,EAA0Ca,IAApBD,GAAtB,EAAOD,cAAP,EAAsBC,kBAOhB0D,EAAmB,WAClB/G,GANqB,IAOpBc,GAAgB,GAChBb,GAAiB,SAAAgE,GAAU,OAAIA,EARX,MASpB5D,GAAsB,SAAA4D,GAAU,OAAIA,EAThB,OAWpBZ,GAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,6BAGvD6C,EAAwB,WACvBhH,GAd0B,IAezBuB,GAAqB,GACrBtB,GAAiB,SAAAgE,GAAU,OAAIA,EAhBN,MAiBzB5D,GAAsB,SAAA4D,GAAU,OAAIA,EAjBX,OAmBzBZ,GAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,6BAIvD8C,EAA8B,WAC7BjH,GAvBiC,IAwBhCgC,GAAkC,GAClC/B,GAAiB,SAAAgE,GAAU,OAAIA,EAzBC,MA0BhC5D,GAAsB,SAAA4D,GAAU,OAAIA,EA1BJ,OA4BhCZ,GAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,6BAIvD+C,EAAyB,WACxBlH,GAhC4B,IAiC3ByC,GAA6B,GAC7BxC,GAAiB,SAAAgE,GAAU,OAAIA,EAlCJ,MAmC3B5D,GAAsB,SAAA4D,GAAU,OAAIA,EAnCT,OAqC3BZ,GAAiB,SAAAa,GAAY,OAAIA,EAAaC,OAAO,6BAIvDgD,EAAsBzB,sBAAW,SAAChI,EAAMiI,GAC1C,OAAI9E,EAWG,cAACoE,EAAA,EAAD,CAAQC,QAAS6B,EAAkB5B,QAAS,YAAaiC,UAAW,cAAC,IAAD,CAAsBC,GAAI,CAACjJ,SAAU,MAAQyH,UAAQ,EAAzH,oBAVI,cAACtI,EAAD,CAAawH,MAAO,qCACvB,yCA/CgB,MAgDhB,mDAAsBpE,EAAtB,8BAEFqE,cAAY,EAJP,SAKH,cAACC,EAAA,EAAD,CAAQC,QAAS6B,EAAkB5B,QAAS,YAAaiC,UAAW,cAAC,IAAD,CAAsBC,GAAI,CAACjJ,SAAU,MAAzG,yBAUNkJ,EAA2B5B,sBAAW,SAAChI,EAAOiI,GAChD,OAAIrE,EAWG,cAAC2D,EAAA,EAAD,CAAQC,QAAS8B,EAAuB9I,MAAM,UAAUiH,QAAS,YAAaiC,UAAW,cAAC,IAAD,CAAsBC,GAAI,CAACjJ,SAAU,MAAQyH,UAAQ,EAA9I,yBAVI,cAACtI,EAAD,CAAawH,MAAO,qCACvB,yCA/DqB,MAgErB,qDAAwB7E,EAAxB,8BAEF8E,cAAY,EAJP,SAKH,cAACC,EAAA,EAAD,CAAQC,QAAS8B,EAAuB9I,MAAM,UAAUiH,QAAS,YAAaiC,UAAW,cAAC,IAAD,CAAsBC,GAAI,CAACjJ,SAAU,MAA9H,8BAUNmJ,EAAiC7B,sBAAW,SAAChI,EAAOiI,GACtD,OAAI5D,EAWG,cAACkD,EAAA,EAAD,CAAQC,QAAS+B,EAA6B9B,QAAS,YAAaiC,UAAW,cAAC,KAAD,CAAUC,GAAI,CAACjJ,SAAU,MAAQyH,UAAQ,EAAxH,gCAVI,cAACtI,EAAD,CAAawH,MAAO,qCACvB,yCA/E4B,MAgF5B,8DAAiClD,EAAjC,8BAEFmD,cAAY,EAJP,SAKH,cAACC,EAAA,EAAD,CAAQC,QAAS+B,EAA6B9B,QAAS,YAAaiC,UAAW,cAAC,KAAD,CAAUC,GAAI,CAACjJ,SAAU,MAAxG,qCAUNoJ,EAA4B9B,sBAAW,SAAChI,EAAOiI,GACjD,OAAInD,EAWG,cAACyC,EAAA,EAAD,CAAQC,QAASgC,EAAwBhJ,MAAM,UAAUiH,QAAS,YAAaiC,UAAW,cAAC,KAAD,CAAUC,GAAI,CAACjJ,SAAU,MAAQyH,UAAQ,EAAnI,2BAVI,cAACtI,EAAD,CAAawH,MAAO,qCACvB,yCA/FuB,MAgGvB,0DAA6BzC,EAA7B,4CAEF0C,cAAY,EAJP,SAKH,cAACC,EAAA,EAAD,CAAQC,QAASgC,EAAwBhJ,MAAM,UAAUiH,QAAS,YAAaiC,UAAW,cAAC,KAAD,CAAUC,GAAI,CAACjJ,SAAU,MAAnH,gCAUZ,OAAO,qCACH,eAACoG,EAAA,EAAD,CAAOG,EAAG,EAAGC,QAAS,EAAGC,UAAW,MAAOC,eAAgB,SAA3D,UACI,cAACqC,EAAD,IACA,cAACI,EAAD,OAGJ,eAAC/C,EAAA,EAAD,CAAOG,EAAG,EAAGC,QAAS,EAAGC,UAAW,MAAOC,eAAgB,SAA3D,UACI,cAACwC,EAAD,IAEA,cAAC/J,EAAD,CAAawH,MAAO,qCAChB,qDACA,0GAEFC,cAAY,EAJd,SAKI,cAACwC,EAAD,Y,wBC3IT,SAASC,GAAM/J,GAClB,IAAOqH,EAASrH,EAATqH,MAEP,MAAW,SAARA,EACQ,eAAC2C,GAAA,EAAD,CAAML,GAAI,CAACM,OAAQ,KAAMlK,UAAW,QAApC,UACH,cAACmK,GAAA,EAAD,CACI7C,MAAOA,EACPsC,GAAI,CACApJ,gBAAiB,0BAGzB,cAAC4J,GAAD,CAAc9C,MAAOA,OAGtB,eAAC2C,GAAA,EAAD,CAAMjK,UAAW,QAAjB,UACH,cAACmK,GAAA,EAAD,CACI7C,MAAOA,EACPsC,GAAI,CACApJ,gBAAiB,0BAGzB,cAAC4J,GAAD,CAAc9C,MAAOA,OAI7B,SAAS8C,GAAanK,GAClB,IAAOqH,EAASrH,EAATqH,MAEP,MAAY,eAARA,EAA6B,cAACO,EAAD,IACrB,SAARP,EAAuB,cAACkB,EAAD,IACf,aAARlB,EAA2B,cAAC+B,GAAD,IACnB,4BAAR/B,EAA0C,cAACxB,EAAD,IACvC,6B,kCCnCJ,SAASuE,GAAUpK,GACtB,OAAO,cAACqK,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACH,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACV,GAAD,CAAO1C,MAAO,iBAElB,eAACmD,GAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACV,GAAD,CAAO1C,MAAO,SACd,cAAC0C,GAAD,CAAO1C,MAAO,+BAElB,cAACmD,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACV,GAAD,CAAO1C,MAAO,oB,4KCZvB,SAAeqD,GAAtB,mC,gDAAO,WAAmCC,GAAnC,gBAAAC,EAAA,yDACEjL,EADF,yCAC4B,IAD5B,uBAGkBA,EAAkBgL,WAAWA,GAAYE,MAH3D,YAGGC,EAHH,QAIQC,MAJR,yCAIsB,IAJtB,gCAMID,EAAOE,KAAKxC,KAAI,SAAAyC,GAAG,kCAASA,EAAIC,QAAb,IAAqBhF,GAAI+E,EAAI/E,SANpD,4C,sBCGA,SAASiF,GAAmBnL,GAC/B,MAAwBiB,mBAAS,GAAjC,mBAAOmK,EAAP,KAAaC,EAAb,KACA,EAAsCpK,mBAAS,IAA/C,mBAAOqK,EAAP,KAAoBC,EAApB,KACA,EAAsCtK,mBAAS,IAA/C,mBAAOuK,EAAP,KAAoBC,EAApB,KAEMC,EAAS,yCAAG,6BAAAd,EAAA,sEACMF,GARH,SAOH,OACRiB,EADQ,OAEdF,EAAeE,GAFD,2CAAH,qDAKfjK,qBAAU,kBAAMgK,MAAa,IAM7B,IAAME,EAAU,CACZ,CAAE1F,GAAI,OAAQ2F,MAAO,OAAQC,SAAU,KACvC,CAAE5F,GAAI,eACF2F,MAAO,UACPC,SAAU,IACVC,OAAS,SAAA/J,GAAK,OAAIA,EAAMsG,eAAe,WAE3C,CACIpC,GAAI,eACJ2F,MAAO,kCACPC,SAAU,IACVC,OAAQ,SAAC/J,GAAD,OAAWA,EAAMsG,eAAe,WAE5C,CACIpC,GAAI,QACJ2F,MAAO,kCACPC,SAAU,IACVC,OAAQ,SAAC/J,GAAD,OAAWA,EAAMsG,eAAe,YAK1C0D,EAAOR,EAAYhD,KAAI,SAACyD,EAAGC,GAAJ,mBAAC,eACvBD,GADsB,IAEzBE,MAAOF,EAAE3K,aAAe2K,EAAEG,kBAC1BC,MAAK,SAACzB,EAAG0B,GAAJ,OAAUC,WAAWD,EAAEH,OAASI,WAAW3B,EAAEuB,UAWtD,OAAO,eAACK,GAAA,EAAD,CAAO7C,GAAI,CAAE8C,MAAO,QAApB,UACH,cAACC,GAAA,EAAD,CAAgB/C,GAAI,CAAEgD,UAAW,KAAjC,SACI,eAACC,GAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACI,eAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAWC,MAAM,SAASC,QAAS,EAAnC,kBAGA,cAACF,GAAA,EAAD,CAAWC,MAAM,SAASC,QAAS,EAAnC,wBAIJ,cAACH,GAAA,EAAD,UACKnB,EAAQpD,KAAI,SAAC2E,GAAD,OACT,cAACH,GAAA,EAAD,CAEIC,MAAOE,EAAOF,MACdG,MAAO,CAAEC,IAAK,GAAIvB,SAAUqB,EAAOrB,UAHvC,SAKKqB,EAAOtB,OAJHsB,EAAOjH,YAS5B,cAACoH,GAAA,EAAD,UACKtB,EACIuB,MAAMnC,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C9C,KAAI,SAACgF,EAAK9E,GACP,OACI,cAACqE,GAAA,EAAD,CAAUU,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,SACK/B,EAAQpD,KAAI,SAAC2E,GACV,IAAMnL,EAAQwL,EAAIL,EAAOjH,IACzB,OACI,cAAC8G,GAAA,EAAD,CAA2BC,MAAOE,EAAOF,MAAzC,SACKE,EAAOpB,QAA2B,kBAAV/J,EACnBmL,EAAOpB,OAAO/J,GACdA,GAHMmL,EAAOjH,QAJgBwC,aAiB3E,cAACkF,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVxC,YAAaA,EACbyC,aA3DiB,SAACC,EAAOC,GAC7B5C,EAAQ4C,IA2DJC,oBAxDwB,SAACF,GAC7BzC,GAAgByC,EAAMG,OAAOnM,OAC7BqJ,EAAQ,IAuDJD,KAAMA,EACNgD,MAAOpC,EAAKvM,YCtGjB,SAAS4O,GAAqBrO,GAEjC,OAAO,mCACH,eAACsO,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CACIC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdtI,GAAG,iBAHP,SAKI,cAACuI,GAAA,EAAD,4BAEJ,cAACC,GAAA,EAAD,UACI,cAACvD,GAAD,WCNhB,SAASwD,KACL,OAAO,sBAAK5O,UAAU,MAAf,UACH,cAACsO,GAAD,IACA,cAACjE,GAAD,OA0BOwE,OAtBf,WACE,OACI,cAAC5N,EAAD,UACI,cAACqB,EAAD,UACI,cAACS,EAAD,UACI,cAACS,EAAD,UACI,cAACS,EAAD,UACI,cAACS,EAAD,UACI,cAACS,EAAD,UACI,cAACO,EAAD,UACE,cAACkJ,GAAD,qBCpBrBE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.2f35d538.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n\r\n// this is executed when this file is imported\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\r\n};\r\nconsole.log({firebaseConfig});\r\n\r\n// if already initialized, use that one\r\nif (!firebase.apps.length) firebase.initializeApp(firebaseConfig);\r\nexport const firestoreDatabase = firebaseConfig.projectId && firebase.firestore();\r\n//export const firestoreDatabase = undefined;\r\nif (firestoreDatabase)\r\n    console.log(`connection to database is ok`);\r\nelse\r\n    console.log(`ERROR: no connection to database`);","import {styled, Tooltip, tooltipClasses} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const HtmlTooltip = styled(({ className, ...props }) => (\r\n    <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n    [`& .${tooltipClasses.tooltip}`]: {\r\n        backgroundColor: '#f5f5f9',\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        maxWidth: 400,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        border: '1px solid #dadde9',\r\n    },\r\n}));","import {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst BottleContext = createContext();\r\n\r\nexport function BottleProvider(props) {\r\n    const [bottleAmount, setBottleAmount] = useState(() => {\r\n        const savedBottleAmount = JSON.parse(localStorage.getItem(\"bottleAmount\"));\r\n        return savedBottleAmount || 0;\r\n    });\r\n    const [productionEfficiency, setProductionEfficiency] = useState(() => {\r\n        const savedProductionEfficiency = JSON.parse(localStorage.getItem(\"productionEfficiency\"));\r\n        return savedProductionEfficiency || 1;\r\n    });\r\n\r\n    useEffect(() => localStorage.setItem(\"bottleAmount\", JSON.stringify(bottleAmount)), [bottleAmount]);\r\n    useEffect(() => localStorage.setItem(\"productionEfficiency\", JSON.stringify(productionEfficiency)), [productionEfficiency]);\r\n\r\n    const api = useMemo(() => ({\r\n        bottleAmount, setBottleAmount, productionEfficiency, setProductionEfficiency\r\n    }), [\r\n        bottleAmount, setBottleAmount, productionEfficiency, setProductionEfficiency\r\n    ]);\r\n\r\n    return <BottleContext.Provider value={api}>\r\n        {props.children}\r\n    </BottleContext.Provider>\r\n}\r\n\r\nexport const useBottleContext = () => useContext(BottleContext);","import {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst CapitalContext = createContext();\r\n\r\nexport function CapitalProvider(props) {\r\n    const [capitalAmount, setCapitalAmount] = useState(() => {\r\n        const savedCapitalAmount = JSON.parse(localStorage.getItem(\"capitalAmount\"));\r\n        return savedCapitalAmount || 0;\r\n    });\r\n    const [salesEfficiency, setSalesEfficiency] = useState(() => {\r\n        const savedSalesEfficiency = JSON.parse(localStorage.getItem(\"salesEfficiency\"));\r\n        return savedSalesEfficiency || 1;\r\n    });\r\n    const [spentCapitalAmount, setSpentCapitalAmount] = useState(() => {\r\n        return JSON.parse(localStorage.getItem(\"spentCapitalAmount\")) || 0;\r\n    })\r\n\r\n    useEffect(() => localStorage.setItem(\"capitalAmount\", JSON.stringify(capitalAmount)), [capitalAmount]);\r\n    useEffect(() => localStorage.setItem(\"salesEfficiency\", JSON.stringify(salesEfficiency)), [salesEfficiency]);\r\n    useEffect(() => localStorage.setItem(\"spentCapitalAmount\", JSON.stringify(spentCapitalAmount)), [spentCapitalAmount]);\r\n\r\n    const api = useMemo(() => ({\r\n        capitalAmount, setCapitalAmount,salesEfficiency, setSalesEfficiency, spentCapitalAmount, setSpentCapitalAmount\r\n    }), [\r\n        capitalAmount, setCapitalAmount, salesEfficiency,setSalesEfficiency, spentCapitalAmount, setSpentCapitalAmount\r\n    ]);\r\n\r\n    return <CapitalContext.Provider value={api}>\r\n        {props.children}\r\n    </CapitalContext.Provider>\r\n}\r\n\r\nexport const useCapitalContext = () => useContext(CapitalContext);","import React, {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst WorkerContext = createContext();\r\n\r\nexport function WorkerProvider(props) {\r\n    const [workerAmount, setWorkerAmount] = useState(() => {\r\n        const savedWorkerAmount = JSON.parse(localStorage.getItem(\"workerAmount\"));\r\n        return savedWorkerAmount || 0;\r\n    });\r\n    const [workerEfficiency, setWorkerEfficiency] = useState(() => {\r\n        const savedWorkerEfficiency = JSON.parse(localStorage.getItem(\"workerEfficiency\"));\r\n        return savedWorkerEfficiency || 1 ;\r\n    });\r\n    const [workerActive, setWorkerActive] = useState(() => {\r\n        return JSON.parse(localStorage.getItem(\"workerActive\")) || false;\r\n    });\r\n\r\n    useEffect(() => localStorage.setItem(\"workerAmount\", JSON.stringify(workerAmount)), [workerAmount]);\r\n    useEffect(() => localStorage.setItem(\"workerEfficiency\", JSON.stringify(workerEfficiency)), [workerEfficiency]);\r\n    useEffect(() => localStorage.setItem(\"workerActive\", JSON.stringify(workerActive)), [workerActive]);\r\n\r\n    const api = useMemo(() => ({\r\n        workerAmount, setWorkerAmount, workerEfficiency, setWorkerEfficiency, workerActive, setWorkerActive\r\n    }), [\r\n        workerAmount, setWorkerAmount, workerEfficiency, setWorkerEfficiency, workerActive, setWorkerActive\r\n    ]);\r\n\r\n    return <WorkerContext.Provider value={api}>\r\n        {props.children}\r\n    </WorkerContext.Provider>\r\n}\r\n\r\nexport const useWorkerContext = () => useContext(WorkerContext);\r\n","import React, {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst SalesPersonContext = createContext();\r\n\r\nexport function SalesPersonProvider(props) {\r\n    const [salesPersonAmount, setSalesPersonAmount] = useState(() => {\r\n        const savedSalesPersonAmount = JSON.parse(localStorage.getItem(\"salesPersonAmount\"));\r\n        return savedSalesPersonAmount || 0;\r\n    });\r\n    const [salesPersonEfficiency, setSalesPersonEfficiency] = useState(() => {\r\n        const savedSalesPersonEfficiency = JSON.parse(localStorage.getItem(\"salesPersonEfficiency\"));\r\n        return savedSalesPersonEfficiency || 1;\r\n    });\r\n    const [salesPersonActive, setSalesPersonActive] = useState(() => {\r\n        return JSON.parse(localStorage.getItem(\"salesPersonActive\")) || false;\r\n    });\r\n\r\n    useEffect(() => localStorage.setItem(\"salesPersonAmount\", JSON.stringify(salesPersonAmount)), [salesPersonAmount]);\r\n    useEffect(() => localStorage.setItem(\"salesPersonEfficiency\", JSON.stringify(salesPersonEfficiency)), [salesPersonEfficiency]);\r\n    useEffect(() => localStorage.setItem(\"salesPersonActive\", JSON.stringify(salesPersonActive)), [salesPersonActive]);\r\n\r\n    const api = useMemo(() => ({\r\n        salesPersonAmount, setSalesPersonAmount, salesPersonEfficiency, setSalesPersonEfficiency, salesPersonActive, setSalesPersonActive\r\n    }), [\r\n        salesPersonAmount, setSalesPersonAmount, salesPersonEfficiency, setSalesPersonEfficiency, salesPersonActive, setSalesPersonActive\r\n    ]);\r\n\r\n    return <SalesPersonContext.Provider value={api}>\r\n        {props.children}\r\n    </SalesPersonContext.Provider>\r\n}\r\n\r\nexport const useSalesPersonContext = () => useContext(SalesPersonContext);","import React, {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst ProductionManagerContext = createContext();\r\n\r\nexport function ProductionManagerProvider(props) {\r\n    const [productionManagerAmount, setProductionManagerAmount] = useState(() => {\r\n        const savedProductionManagerAmount = JSON.parse(localStorage.getItem(\"productionManagerAmount\"));\r\n        return savedProductionManagerAmount || 0;\r\n    });\r\n    const [productionManagerEfficiency, setProductionManagerEfficiency] = useState(() => {\r\n        const savedProductionManagerEfficiency = JSON.parse(localStorage.getItem(\"productionManagerEfficiency\"));\r\n        return savedProductionManagerEfficiency || 1;\r\n    });\r\n    const [productionManagerUpgradeBought, setProductionManagerUpgradeBought] = useState(() => {\r\n        return JSON.parse(localStorage.getItem(\"productionManagerUpgradeBought\")) || false;\r\n    });\r\n\r\n    useEffect(() => localStorage.setItem(\"productionManagerAmount\", JSON.stringify(productionManagerAmount)), [productionManagerAmount]);\r\n    useEffect(() => localStorage.setItem(\"productionManagerEfficiency\", JSON.stringify(productionManagerEfficiency)), [productionManagerEfficiency]);\r\n    useEffect(() => localStorage.setItem(\"productionManagerUpgradeBought\", JSON.stringify(productionManagerUpgradeBought)), [productionManagerUpgradeBought]);\r\n\r\n    const api = useMemo(() => ({\r\n        productionManagerAmount, setProductionManagerAmount, productionManagerEfficiency, setProductionManagerEfficiency, productionManagerUpgradeBought, setProductionManagerUpgradeBought\r\n    }), [\r\n        productionManagerAmount, setProductionManagerAmount, productionManagerEfficiency, setProductionManagerEfficiency, productionManagerUpgradeBought, setProductionManagerUpgradeBought\r\n    ]);\r\n\r\n    return <ProductionManagerContext.Provider value={api}>\r\n        {props.children}\r\n    </ProductionManagerContext.Provider>\r\n}\r\n\r\nexport const useProductionManagerContext = () => useContext(ProductionManagerContext);\r\n","import React, {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst SalesManagerContext = createContext();\r\n\r\nexport function SalesManagerProvider(props) {\r\n    const [salesManagerAmount, setSalesManagerAmount] = useState(() => {\r\n        const savedSalesManagerAmount = JSON.parse(localStorage.getItem(\"salesManagerAmount\"));\r\n        return savedSalesManagerAmount || 0;\r\n    });\r\n    const [salesManagerEfficiency, setSalesManagerEfficiency] = useState(() => {\r\n        const savedSalesManagerEfficiency = JSON.parse(localStorage.getItem(\"salesManagerEfficiency\"));\r\n        return savedSalesManagerEfficiency || 1;\r\n    });\r\n    const [salesManagerUpgradeBought, setSalesManagerUpgradeBought] = useState(() => {\r\n        return JSON.parse(localStorage.getItem(\"salesManagerUpgradeBought\")) || false;\r\n    });\r\n\r\n    useEffect(() => localStorage.setItem(\"salesManagerAmount\", JSON.stringify(salesManagerAmount)), [salesManagerAmount]);\r\n    useEffect(() => localStorage.setItem(\"salesManagerEfficiency\", JSON.stringify(salesManagerEfficiency)), [salesManagerEfficiency]);\r\n    useEffect(() => localStorage.setItem(\"salesManagerUpgradeBought\", JSON.stringify(salesManagerUpgradeBought)), [salesManagerUpgradeBought]);\r\n\r\n    const api = useMemo(() => ({\r\n        salesManagerAmount, setSalesManagerAmount, salesManagerEfficiency, setSalesManagerEfficiency, salesManagerUpgradeBought, setSalesManagerUpgradeBought\r\n    }), [\r\n        salesManagerAmount, setSalesManagerAmount, salesManagerEfficiency, setSalesManagerEfficiency, salesManagerUpgradeBought, setSalesManagerUpgradeBought\r\n    ]);\r\n\r\n    return <SalesManagerContext.Provider value={api}>\r\n        {props.children}\r\n    </SalesManagerContext.Provider>\r\n}\r\n\r\nexport const useSalesManagerContext = () => useContext(SalesManagerContext);\r\n","import React, {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst ManagerHiringContext = createContext();\r\n\r\nexport function ManagerHiringProvider(props) {\r\n    const [productionManagerHiring, setProductionManagerHiring] = useState(() => {\r\n        const savedProductionManagerHiring = JSON.parse(localStorage.getItem(\"productionManagerHiring\"));\r\n        return savedProductionManagerHiring || false;\r\n    });\r\n    const [salesManagerHiring, setSalesManagerHiring] = useState(() => {\r\n        const savedSalesManagerHiring = JSON.parse(localStorage.getItem(\"salesManagerHiring\"));\r\n        return savedSalesManagerHiring || false;\r\n    });\r\n\r\n    useEffect(() => localStorage.setItem(\"productionManagerHiring\", JSON.stringify(productionManagerHiring)), [productionManagerHiring]);\r\n    useEffect(() => localStorage.setItem(\"salesManagerHiring\", JSON.stringify(salesManagerHiring)), [salesManagerHiring]);\r\n\r\n    const api = useMemo(() => ({\r\n        productionManagerHiring, setProductionManagerHiring, salesManagerHiring, setSalesManagerHiring\r\n    }), [\r\n        productionManagerHiring, setProductionManagerHiring, salesManagerHiring, setSalesManagerHiring\r\n    ]);\r\n\r\n    return <ManagerHiringContext.Provider value={api}>\r\n        {props.children}\r\n    </ManagerHiringContext.Provider>\r\n}\r\n\r\nexport const useManagerHiringContext = () => useContext(ManagerHiringContext);\r\n","import React, {createContext, useContext, useEffect, useMemo, useState} from \"react\";\r\n\r\nconst InfoContext = createContext();\r\n\r\nexport function InfoProvider(props) {\r\n    const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n    const api = useMemo(() => ({\r\n        errorMessages, setErrorMessages\r\n    }), [\r\n        errorMessages, setErrorMessages\r\n    ]);\r\n\r\n    return <InfoContext.Provider value={api}>\r\n        {props.children}\r\n    </InfoContext.Provider>\r\n}\r\n\r\nexport const useInfoContext = () => useContext(InfoContext);","import {Button, Stack, Tooltip} from \"@mui/material\";\r\nimport {HtmlTooltip} from \"./Tooltips\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useBottleContext} from \"../context/bottleContext\";\r\nimport {useCapitalContext} from \"../context/capitalContext\";\r\nimport {useWorkerContext} from \"../context/workerContext\";\r\nimport {useSalesPersonContext} from \"../context/salesPersonContext\";\r\nimport {useProductionManagerContext} from \"../context/productionManagerContext\";\r\nimport {useSalesManagerContext} from \"../context/salesManagerContext\";\r\nimport {useManagerHiringContext} from \"../context/managerHiringContext\";\r\nimport {useInfoContext} from \"../context/infoContext\";\r\n\r\nexport function ProductionPanelContent(props) {\r\n    //states belonging to this component\r\n    const [updater, setUpdater] = useState(false);\r\n\r\n    //states from context components\r\n    const {bottleAmount, setBottleAmount, productionEfficiency} = useBottleContext();\r\n    const {capitalAmount, setCapitalAmount, salesEfficiency, setSpentCapitalAmount} = useCapitalContext();\r\n    const {workerAmount, setWorkerAmount, workerEfficiency, workerActive} = useWorkerContext();\r\n    const {salesPersonAmount, setSalesPersonAmount, salesPersonEfficiency, salesPersonActive} = useSalesPersonContext();\r\n    const {productionManagerAmount, setProductionManagerAmount, productionManagerEfficiency, productionManagerUpgradeBought} = useProductionManagerContext();\r\n    const {salesManagerAmount, setSalesManagerAmount, salesManagerEfficiency, salesManagerUpgradeBought} = useSalesManagerContext();\r\n    const {productionManagerHiring, setProductionManagerHiring} = useManagerHiringContext();\r\n    const {salesManagerHiring, setSalesManagerHiring} = useManagerHiringContext();\r\n    const {errorMessages, setErrorMessages} = useInfoContext();\r\n\r\n    const WORKER_COST = 10;\r\n    const SALES_PERSON_COST = 10;\r\n    const PRODUCTION_MANAGER_COST = 30;\r\n    const SALES_MANAGER_COST = 30;\r\n\r\n    /**\r\n     * UseEffect contains setInterval --> this loops every 1000 milliseconds\r\n     */\r\n    useEffect(() => {\r\n        const id = setInterval(() => {\r\n            console.log(\"Updating...\")\r\n            setBottleAmount(prevBottleAmount => prevBottleAmount + workerAmount);\r\n            if(bottleAmount-(salesPersonEfficiency*salesPersonAmount) >= 0 ) {\r\n                setBottleAmount(prevBottleAmount => prevBottleAmount - (salesPersonEfficiency * salesPersonAmount));\r\n                setCapitalAmount(prevCapitalAmount => prevCapitalAmount + (salesPersonEfficiency * salesPersonAmount));\r\n            }\r\n\r\n            //Managers automatically hiring\r\n            if(productionManagerHiring) {\r\n                if(capitalAmount >= WORKER_COST && productionManagerAmount > 0) {\r\n                    setWorkerAmount(prevWorkerAmount => prevWorkerAmount + (productionManagerAmount * productionManagerEfficiency));\r\n                    setCapitalAmount(prevAmount => prevAmount - WORKER_COST);\r\n                    setSpentCapitalAmount(prevAmount => prevAmount + WORKER_COST);\r\n                } else {\r\n                    setErrorMessages(currentArray => currentArray.concat(\r\n                        (productionManagerAmount>0) ? \"Production manager can't hire workers - Insufficient CAPITAL!\" : \"You must hire production managers first!\"));\r\n                    setProductionManagerHiring(false);\r\n                }\r\n            }\r\n            if(salesManagerHiring) {\r\n                if(capitalAmount >= SALES_PERSON_COST && salesManagerAmount > 0) {\r\n                    setSalesPersonAmount(prevSalesPersonAmount => prevSalesPersonAmount + (salesManagerAmount * salesManagerEfficiency));\r\n                    setCapitalAmount(prevAmount => prevAmount - SALES_PERSON_COST);\r\n                    setSpentCapitalAmount(prevAmount => prevAmount + SALES_PERSON_COST);\r\n                } else {\r\n                    setErrorMessages(currentArray => currentArray.concat(\r\n                        (salesManagerAmount > 0) ? \"Sales manager can't hire salespeople - Insufficient CAPITAL!\" : \"You must hire sales managers first!\"));\r\n                    setSalesManagerHiring(false);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * This basically updates the useEffect, because state update is the only dependency.\r\n             * By using setUpdater the useEffect is independent from any other state. Without this\r\n             * we would have the following problem: when clicking on \"hire worker\" the useEffect would restart.\r\n             * With setUpdater we can keep clicking any other button while the states used in the useEffect are\r\n             * updated in real-time and the useEffect is not interrupted.\r\n             */\r\n            setUpdater(prevUpdater => !prevUpdater);\r\n\r\n            /*setTimeout(() => {\r\n                console.log(\"timeout 1\")\r\n                setBottleAmount(prevBottleAmount => prevBottleAmount + workerAmount);\r\n                setUpdater(prevUpdater => !prevUpdater);\r\n            }, 500)*/\r\n            /*setTimeout(() => {\r\n                console.log(\"timeout 2\")\r\n                setUpdater(prevUpdater => !prevUpdater);\r\n            }, 500)*/\r\n\r\n        }, 1000);\r\n        return () => window.clearInterval(id);\r\n    }, [updater]);\r\n\r\n\r\n    //manually increase bottleAmount with \"produce bottle\" button\r\n    const changeBottleAmount = () => {\r\n        setBottleAmount(prevBottleAmount => prevBottleAmount + productionEfficiency);\r\n    }\r\n\r\n    //manually increase capitalAmount and decrease bottleAmount with \"sell bottle\" button\r\n    const changeCapitalAmount = () => {\r\n        if(bottleAmount-salesEfficiency >= 0 ) {\r\n            setBottleAmount(prevBottleAmount => prevBottleAmount - salesEfficiency);\r\n            setCapitalAmount(prevCapitalAmount => prevCapitalAmount + salesEfficiency);\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"Not enough BOTTLES!\"));\r\n        }\r\n    }\r\n\r\n    // EMPLOYEES SECTION\r\n    //manually increase workerAmount with \"hire worker\" button\r\n    const changeWorkerAmount = () => {\r\n        if(workerActive) {\r\n            if(capitalAmount >= WORKER_COST) {\r\n                setWorkerAmount(prevWorkerAmount => prevWorkerAmount + 1)\r\n                setCapitalAmount(prevAmount => prevAmount - WORKER_COST);\r\n                setSpentCapitalAmount(prevAmount => prevAmount + WORKER_COST);\r\n            } else {\r\n                setErrorMessages(currentArray => currentArray.concat(\"Insufficient CAPITAL!\"));\r\n            }\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"workers unavailable, buy WORKER upgrade first!\"));\r\n        }\r\n    }\r\n\r\n    //manually increase salesPersonAmount with \"hire salesperson\" button\r\n    const changeSalesPersonAmount = () => {\r\n        if(salesPersonActive) {\r\n            if(capitalAmount >= SALES_PERSON_COST) {\r\n                setSalesPersonAmount(prevSalesPersonAmount => prevSalesPersonAmount + 1);\r\n                setCapitalAmount(prevAmount => prevAmount - SALES_PERSON_COST);\r\n                setSpentCapitalAmount(prevAmount => prevAmount + SALES_PERSON_COST);\r\n            } else {\r\n                setErrorMessages(currentArray => currentArray.concat(\"Insufficient CAPITAL!\"));\r\n            }\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"salespeople unavailable, buy SALESPERSON upgrade first!\"));\r\n        }\r\n    }\r\n\r\n    //manually increase productionManagerAmount\r\n    const changeProductionManagerAmount = () => {\r\n        if(productionManagerUpgradeBought) {\r\n            if(capitalAmount >= PRODUCTION_MANAGER_COST) {\r\n                setProductionManagerAmount(prevProductionManagerAmount => prevProductionManagerAmount + 1)\r\n                setCapitalAmount(prevAmount => prevAmount - PRODUCTION_MANAGER_COST);\r\n                setSpentCapitalAmount(prevAmount => prevAmount + PRODUCTION_MANAGER_COST);\r\n            } else {\r\n                setErrorMessages(currentArray => currentArray.concat(\"Insufficient CAPITAL!\"));\r\n            }\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"You haven't bought the PRODUCTION MANAGER upgrade yet!\"));\r\n        }\r\n    }\r\n\r\n    //manually increase salesManagerAmount\r\n    const changeSalesManagerAmount = () => {\r\n        if(salesManagerUpgradeBought) {\r\n            if(capitalAmount >= SALES_MANAGER_COST) {\r\n                setSalesManagerAmount(prevSalesManagerAmount => prevSalesManagerAmount + 1)\r\n                setCapitalAmount(prevAmount => prevAmount - SALES_MANAGER_COST);\r\n                setSpentCapitalAmount(prevAmount => prevAmount + SALES_MANAGER_COST);\r\n            } else {\r\n                setErrorMessages(currentArray => currentArray.concat(\"Insufficient CAPITAL!\"));\r\n            }\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"You haven't bought the SALES MANAGER upgrade yet!\"))\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Stack mb={5} mt={3} p={2} spacing={12} direction={\"row\"} justifyContent={\"center\"}>\r\n            <HtmlTooltip title={<>\r\n                <div>PRODUCE {productionEfficiency} BOTTLES</div>\r\n            </>} followCursor>\r\n                <Button onClick={changeBottleAmount} variant={\"contained\"}>PRODUCE BOTTLE</Button>\r\n            </HtmlTooltip>\r\n            <HtmlTooltip title={<>\r\n                <div>SELL {salesEfficiency} BOTTLES</div>\r\n            </>} followCursor>\r\n                <Button onClick={changeCapitalAmount} variant={\"contained\"} color={\"success\"}>SELL BOTTLE</Button>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n\r\n        <h4>EMPLOYEES</h4>\r\n\r\n        <Stack p={2} spacing={5} direction={\"row\"} justifyContent={\"center\"}>\r\n            <Stack spacing={3} direction={\"column\"} justifyContent={\"center\"}>\r\n                <HtmlTooltip title={<>\r\n                    <h5>COST: ${WORKER_COST}</h5>\r\n                    <div>hire a worker</div>\r\n                </>} followCursor>\r\n                    <Button onClick={changeWorkerAmount} variant={\"contained\"}>HIRE WORKER</Button>\r\n                </HtmlTooltip>\r\n                <HtmlTooltip title={<>\r\n                    <h5>COST: ${PRODUCTION_MANAGER_COST}</h5>\r\n                    <div>hire a production manager</div>\r\n                </>} followCursor>\r\n                    <Button onClick={changeProductionManagerAmount} variant={\"contained\"}>HIRE PRODUCTION MANAGER</Button>\r\n                </HtmlTooltip>\r\n            </Stack>\r\n            <Stack spacing={3} direction={\"column\"} justifyContent={\"center\"}>\r\n                <HtmlTooltip title={<>\r\n                    <h5>COST: ${SALES_PERSON_COST}</h5>\r\n                    <div>hire a salesperson</div>\r\n                </>} followCursor>\r\n                    <Button onClick={changeSalesPersonAmount} color=\"success\" variant={\"contained\"}>HIRE SALESPERSON</Button>\r\n                </HtmlTooltip>\r\n                <HtmlTooltip title={<>\r\n                    <h5>COST: ${SALES_MANAGER_COST}</h5>\r\n                    <div>hire a sales manager</div>\r\n                </>} followCursor>\r\n                    <Button onClick={changeSalesManagerAmount} color=\"success\" variant={\"contained\"}>HIRE SALES MANAGER</Button>\r\n                </HtmlTooltip>\r\n            </Stack>\r\n        </Stack>\r\n    </>\r\n}","import {Stack, Box, Tooltip, Button} from \"@mui/material\";\r\nimport React, {forwardRef, useState} from \"react\";\r\nimport {HtmlTooltip} from \"./Tooltips\";\r\nimport {useWorkerContext} from \"../context/workerContext\";\r\nimport {useBottleContext} from \"../context/bottleContext\";\r\nimport {useCapitalContext} from \"../context/capitalContext\";\r\nimport {useSalesPersonContext} from \"../context/salesPersonContext\";\r\nimport {useProductionManagerContext} from \"../context/productionManagerContext\";\r\nimport {useSalesManagerContext} from \"../context/salesManagerContext\";\r\nimport {useManagerHiringContext} from \"../context/managerHiringContext\";\r\n\r\nexport function StatisticsPanelContent(props) {\r\n\r\n    const {bottleAmount} = useBottleContext();\r\n    const {capitalAmount} = useCapitalContext();\r\n    const {workerAmount, workerEfficiency} = useWorkerContext();\r\n    const {salesPersonAmount, salesPersonEfficiency} = useSalesPersonContext();\r\n    const {productionManagerAmount, setProductionManagerAmount, productionManagerEfficiency, productionManagerUpgradeBought} = useProductionManagerContext();\r\n    const {salesManagerAmount, setSalesManagerAmount, salesManagerEfficiency, salesManagerUpgradeBought} = useSalesManagerContext();\r\n    const {productionManagerHiring, setProductionManagerHiring} = useManagerHiringContext();\r\n    const {salesManagerHiring, setSalesManagerHiring} = useManagerHiringContext();\r\n\r\n    const changeProductionManagerHiring = () => {\r\n        setProductionManagerHiring(!productionManagerHiring);\r\n    }\r\n\r\n    const changeSalesManagerHiring = () => {\r\n        setSalesManagerHiring(!salesManagerHiring);\r\n    }\r\n\r\n    //HIRING BUTTONS\r\n    const ProductionManagerHiringButton = forwardRef((props, ref) => {\r\n        if(productionManagerUpgradeBought) {\r\n            return <Button onClick={changeProductionManagerHiring} variant=\"contained\" size=\"small\">{productionManagerHiring ? \"STOP HIRING\" : \"START HIRING\" }</Button>\r\n        } else {\r\n            return <Button onClick={changeProductionManagerHiring} variant=\"contained\" size=\"small\" disabled>{productionManagerHiring ? \"STOP HIRING\" : \"START HIRING\" }</Button>\r\n        }\r\n    })\r\n    const SalesManagerHiringButton = forwardRef((props, ref) => {\r\n        if(salesManagerUpgradeBought) {\r\n            return <Button onClick={changeSalesManagerHiring} color=\"success\" variant=\"contained\" size=\"small\">{salesManagerHiring ? \"STOP HIRING\" : \"START HIRING\" }</Button>\r\n        } else {\r\n            return <Button onClick={changeSalesManagerHiring} color=\"success\" variant=\"contained\" size=\"small\" disabled>{salesManagerHiring ? \"STOP HIRING\" : \"START HIRING\" }</Button>\r\n        }\r\n    })\r\n\r\n    return <>\r\n        <Stack mb={5} p={2} spacing={6} direction={\"row\"} justifyContent={\"center\"}>\r\n            <Box>\r\n                <div className={\"statTitle\"}>WATER BOTTLES</div>\r\n                <div className={\"statText\"}>{bottleAmount.toLocaleString(\"en-US\")}</div>\r\n            </Box>\r\n            <Box>\r\n                <div className={\"statTitle\"}>CAPITAL</div>\r\n                <div className={\"statText\"}>$ {capitalAmount.toLocaleString(\"en-US\")}</div>\r\n            </Box>\r\n        </Stack>\r\n\r\n        <h4>EMPLOYEES</h4>\r\n\r\n        <Stack p={2} spacing={2} direction={\"row\"} justifyContent={\"center\"}>\r\n            <HtmlTooltip title={<>\r\n                <div>produces {workerEfficiency} bottle(s) every second</div>\r\n            </>\r\n            } followCursor>\r\n                <Box className={\"box\"}>\r\n                    <div className={\"boxTitle\"}>WORKERS</div>\r\n                    <div className={\"boxText\"}>{workerAmount}</div>\r\n                </Box>\r\n            </HtmlTooltip>\r\n\r\n            <HtmlTooltip title={<>\r\n                <div>sells {salesPersonEfficiency} bottle(s) every second</div>\r\n            </>\r\n            } followCursor>\r\n                <Box className={\"box\"}>\r\n                    <div className={\"boxTitle\"}>SALESPEOPLE</div>\r\n                    <div className={\"boxText\"}>{salesPersonAmount}</div>\r\n                </Box>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n\r\n        {/*MANAGERS*/}\r\n\r\n        <Stack p={2} spacing={2} direction={\"row\"} justifyContent={\"center\"}>\r\n            <HtmlTooltip title={<>\r\n                <div>hires {productionManagerEfficiency} worker(s) every second</div>\r\n            </>\r\n            } followCursor>\r\n                <Box className={\"box\"}>\r\n                    <div className={\"boxTitle\"}>PRODUCTION MANAGERS</div>\r\n                    <div className={\"boxText\"}>{productionManagerAmount}</div>\r\n                    <ProductionManagerHiringButton/>\r\n                </Box>\r\n            </HtmlTooltip>\r\n\r\n            <HtmlTooltip title={<>\r\n                <div>hires {salesManagerEfficiency} salesperson/salespeople every second</div>\r\n            </>\r\n            } followCursor>\r\n                <Box className={\"box\"}>\r\n                    <div className={\"boxTitle\"}>SALES MANAGERS</div>\r\n                    <div className={\"boxText\"}>{salesManagerAmount}</div>\r\n                    <SalesManagerHiringButton/>\r\n                </Box>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n\r\n        {/*add buttons for stopping and resuming managers from hiring new workers*/}\r\n    </>\r\n}","import {useInfoContext} from \"../context/infoContext\";\r\nimport {Alert, Zoom} from \"@mui/material\";\r\nimport {useEffect, useState} from \"react\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Fab from '@mui/material/Fab';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nexport function InfoPanelContent(props) {\r\n    const {errorMessages, setErrorMessages} = useInfoContext();\r\n\r\n    return <div>\r\n        {errorMessages.map((val, key) => <JustPrintIt key={key} message={val}/>)}\r\n    </div>\r\n}\r\n\r\nfunction JustPrintIt(props) {\r\n    const {message} = props;\r\n    const [glow, setGlow] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let timer1 = setTimeout(() => setGlow(false), 2000);\r\n        return () => {\r\n            clearTimeout(timer1);\r\n        };\r\n    }, [glow])\r\n\r\n    if(glow) return <Alert variant=\"outlined\" severity=\"error\">{message}</Alert>\r\n    return<></>\r\n}","import {Box, Button, IconButton, Stack, Tooltip, tooltipClasses, styled} from \"@mui/material\";\r\nimport AccessibilityNewIcon from '@mui/icons-material/AccessibilityNew';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport {HtmlTooltip} from \"./Tooltips\";\r\nimport React, {forwardRef} from \"react\";\r\nimport {useWorkerContext} from \"../context/workerContext\";\r\nimport {useSalesPersonContext} from \"../context/salesPersonContext\";\r\nimport {useProductionManagerContext} from \"../context/productionManagerContext\";\r\nimport {useSalesManagerContext} from \"../context/salesManagerContext\";\r\nimport {useCapitalContext} from \"../context/capitalContext\";\r\nimport {useInfoContext} from \"../context/infoContext\";\r\n\r\nexport function UpgradesPanelContent(props) {\r\n    const {capitalAmount, setCapitalAmount, salesEfficiency, spentCapitalAmount, setSpentCapitalAmount} = useCapitalContext();\r\n    const {workerEfficiency, workerActive, setWorkerActive} = useWorkerContext();\r\n    const {salesPersonEfficiency, salesPersonActive, setSalesPersonActive} = useSalesPersonContext();\r\n    const {productionManagerEfficiency, productionManagerUpgradeBought, setProductionManagerUpgradeBought} = useProductionManagerContext();\r\n    const {salesManagerEfficiency, salesManagerUpgradeBought, setSalesManagerUpgradeBought} = useSalesManagerContext();\r\n    const {errorMessages, setErrorMessages} = useInfoContext();\r\n\r\n    const WORKER_UPGRADE_COST = 20;\r\n    const SALESPERSON_UPGRADE_COST = 20;\r\n    const PRODUCTION_MANAGER_UPGRADE_COST = 50;\r\n    const SALES_MANAGER_UPGRADE_COST = 50;\r\n\r\n    const buyWorkerUpgrade = () => {\r\n        if(capitalAmount >= WORKER_UPGRADE_COST) {\r\n            setWorkerActive(true);\r\n            setCapitalAmount(prevAmount => prevAmount - WORKER_UPGRADE_COST);\r\n            setSpentCapitalAmount(prevAmount => prevAmount + WORKER_UPGRADE_COST);\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"Insufficient CAPITAL!\"));\r\n        }\r\n    }\r\n    const buySalesPersonUpgrade = () => {\r\n        if(capitalAmount >= SALESPERSON_UPGRADE_COST) {\r\n            setSalesPersonActive(true);\r\n            setCapitalAmount(prevAmount => prevAmount - SALESPERSON_UPGRADE_COST);\r\n            setSpentCapitalAmount(prevAmount => prevAmount + SALESPERSON_UPGRADE_COST);\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"Insufficient CAPITAL!\"));\r\n        }\r\n\r\n    }\r\n    const buyProductionManagerUpgrade = () => {\r\n        if(capitalAmount >= PRODUCTION_MANAGER_UPGRADE_COST) {\r\n            setProductionManagerUpgradeBought(true);\r\n            setCapitalAmount(prevAmount => prevAmount - PRODUCTION_MANAGER_UPGRADE_COST);\r\n            setSpentCapitalAmount(prevAmount => prevAmount + PRODUCTION_MANAGER_UPGRADE_COST);\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"Insufficient CAPITAL!\"));\r\n        }\r\n\r\n    }\r\n    const buySalesManagerUpgrade = () => {\r\n        if(capitalAmount >= SALES_MANAGER_UPGRADE_COST) {\r\n            setSalesManagerUpgradeBought(true);\r\n            setCapitalAmount(prevAmount => prevAmount - SALES_MANAGER_UPGRADE_COST);\r\n            setSpentCapitalAmount(prevAmount => prevAmount + SALES_MANAGER_UPGRADE_COST);\r\n        } else {\r\n            setErrorMessages(currentArray => currentArray.concat(\"Insufficient CAPITAL!\"));\r\n        }\r\n    }\r\n\r\n    const WorkerUpgradeButton = forwardRef((props,ref) => {\r\n        if(!workerActive) {\r\n            return <HtmlTooltip title={<>\r\n                <h5>COST: ${WORKER_UPGRADE_COST}</h5>\r\n                <div>Workers produce {workerEfficiency} bottle(s) per second</div>\r\n            </>\r\n            } followCursor>\r\n                <Button onClick={buyWorkerUpgrade} variant={\"contained\"} startIcon={<AccessibilityNewIcon sx={{fontSize: 50}}/>}>\r\n                    WORKER\r\n                </Button>\r\n            </HtmlTooltip>\r\n        }\r\n        return <Button onClick={buyWorkerUpgrade} variant={\"contained\"} startIcon={<AccessibilityNewIcon sx={{fontSize: 50}}/>} disabled>\r\n                WORKER\r\n            </Button>\r\n    })\r\n\r\n    const SalesPersonUpgradeButton = forwardRef((props, ref) => {\r\n        if(!salesPersonActive) {\r\n            return <HtmlTooltip title={<>\r\n                <h5>COST: ${SALESPERSON_UPGRADE_COST}</h5>\r\n                <div>Sales people sell {salesEfficiency} bottle(s) per second</div>\r\n            </>\r\n            } followCursor>\r\n                <Button onClick={buySalesPersonUpgrade} color=\"success\" variant={\"contained\"} startIcon={<AccessibilityNewIcon sx={{fontSize: 50}}/>}>\r\n                    SALESPERSON\r\n                </Button>\r\n            </HtmlTooltip>\r\n        }\r\n        return <Button onClick={buySalesPersonUpgrade} color=\"success\" variant={\"contained\"} startIcon={<AccessibilityNewIcon sx={{fontSize: 50}}/>} disabled>\r\n                SALESPERSON\r\n            </Button>\r\n    })\r\n\r\n    const ProductionManagerUpgradeButton = forwardRef((props, ref) => {\r\n        if(!productionManagerUpgradeBought) {\r\n            return <HtmlTooltip title={<>\r\n                <h5>COST: ${PRODUCTION_MANAGER_UPGRADE_COST}</h5>\r\n                <div>A production manager hires {productionManagerEfficiency} worker(s) per second</div>\r\n            </>\r\n            } followCursor>\r\n                <Button onClick={buyProductionManagerUpgrade} variant={\"contained\"} startIcon={<WorkIcon sx={{fontSize: 50}}/>}>\r\n                    PRODUCTION MANAGER\r\n                </Button>\r\n            </HtmlTooltip>\r\n        }\r\n        return <Button onClick={buyProductionManagerUpgrade} variant={\"contained\"} startIcon={<WorkIcon sx={{fontSize: 50}}/>} disabled>\r\n                PRODUCTION MANAGER\r\n            </Button>\r\n    })\r\n\r\n    const SalesManagerUpgradeButton = forwardRef((props, ref) => {\r\n        if(!salesManagerUpgradeBought) {\r\n            return <HtmlTooltip title={<>\r\n                <h5>COST: ${SALES_MANAGER_UPGRADE_COST}</h5>\r\n                <div>A sales managers hires {salesManagerEfficiency} salespeople/salesperson per second</div>\r\n            </>\r\n            } followCursor>\r\n                <Button onClick={buySalesManagerUpgrade} color=\"success\" variant={\"contained\"} startIcon={<WorkIcon sx={{fontSize: 50}}/>}>\r\n                    SALES MANAGER\r\n                </Button>\r\n            </HtmlTooltip>\r\n        }\r\n        return <Button onClick={buySalesManagerUpgrade} color=\"success\" variant={\"contained\"} startIcon={<WorkIcon sx={{fontSize: 50}}/>} disabled>\r\n                SALES MANAGER\r\n            </Button>\r\n    })\r\n\r\n    return <>\r\n        <Stack p={2} spacing={2} direction={\"row\"} justifyContent={\"center\"}>\r\n            <WorkerUpgradeButton/>\r\n            <ProductionManagerUpgradeButton/>\r\n        </Stack>\r\n\r\n        <Stack p={2} spacing={2} direction={\"row\"} justifyContent={\"center\"}>\r\n            <SalesPersonUpgradeButton/>\r\n\r\n            <HtmlTooltip title={<>\r\n                <h5>COST: €100.000</h5>\r\n                <div>Sales managers hire (SalesManagerEfficiency) sales people per second</div>\r\n            </>\r\n            } followCursor>\r\n                <SalesManagerUpgradeButton/>\r\n            </HtmlTooltip>\r\n        </Stack>\r\n    </>\r\n}","import {ProductionPanelContent} from \"./ProductionPanelContent\";\r\nimport {StatisticsPanelContent} from \"./StatisticsPanelContent\";\r\nimport {InfoPanelContent} from \"./InfoPanelContent\";\r\nimport {UpgradesPanelContent} from \"./UpgradesPanelContent\";\r\nimport {Card, CardHeader, Tooltip} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\n\r\nexport function Panel(props) {\r\n    const {title} = props;\r\n\r\n    if(title===\"INFO\") {\r\n        return <Card sx={{height: 200}} className={\"Panel\"}>\r\n            <CardHeader\r\n                title={title}\r\n                sx={{\r\n                    backgroundColor: \"rgba(75,75,212,0.85)\"\r\n                }}\r\n            />\r\n            <PanelContent title={title}/>\r\n        </Card>\r\n    }\r\n    return <Card className={\"Panel\"}>\r\n        <CardHeader\r\n            title={title}\r\n            sx={{\r\n                backgroundColor: \"rgba(75,75,212,0.85)\"\r\n            }}\r\n        />\r\n        <PanelContent title={title}/>\r\n    </Card>\r\n}\r\n\r\nfunction PanelContent(props) {\r\n    const {title} = props;\r\n\r\n    if (title===\"STATISTICS\") return <StatisticsPanelContent />\r\n    if (title===\"INFO\") return <InfoPanelContent/>\r\n    if (title===\"UPGRADES\") return <UpgradesPanelContent/>\r\n    if (title===\"PRODUCTION / MANAGEMENT\") return <ProductionPanelContent />\r\n    return <></>\r\n}","import {Panel} from \"./Panel\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport Icon from '@mui/material/Icon';\r\n\r\nexport function Dashboard(props) {\r\n    return <Container fluid>\r\n        <Row>\r\n            <Col sm={4}>\r\n                <Panel title={\"STATISTICS\"}/>\r\n            </Col>\r\n            <Col sm={4}>\r\n                <Panel title={\"INFO\"}/>\r\n                <Panel title={\"PRODUCTION / MANAGEMENT\"}/>\r\n            </Col>\r\n            <Col sm={4}>\r\n                <Panel title={\"UPGRADES\"}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}","import \"firebase/compat/firestore\";\r\nimport {firestoreDatabase} from \"./firestore\";\r\n\r\nexport async function getCollectionFromDb(collection) {\r\n    if (!firestoreDatabase) return [];\r\n\r\n    const result = await firestoreDatabase.collection(collection).get();\r\n    if (result.empty) return [];\r\n\r\n    return result.docs.map(doc => ({...doc.data(), id: doc.id}));\r\n}","import {Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow} from \"@mui/material\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getCollectionFromDb} from \"../services/firestoreCollection\";\r\n\r\nconst COLLECTION_USERS = \"users\";\r\n\r\nexport function LeaderBoardContent(props) {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [usersFromDb, setUsersFromDb] = useState([]);\r\n\r\n    const loadUsers = async () => {\r\n        const users = await getCollectionFromDb(COLLECTION_USERS);\r\n        setUsersFromDb(users);\r\n    }\r\n\r\n    useEffect(() => loadUsers(), []);\r\n\r\n    //console.log(usersFromDb);\r\n\r\n    //usersFromDb.map(u => (console.log(u)));\r\n\r\n    const columns = [\r\n        { id: 'name', label: 'Name', minWidth: 170 },\r\n        { id: 'bottleAmount',\r\n            label: 'Bottles',\r\n            minWidth: 170,\r\n            format: (value => value.toLocaleString('en-US')),\r\n        },\r\n        {\r\n            id: 'totalCapital',\r\n            label: 'Total Capital (current + spent)',\r\n            minWidth: 170,\r\n            format: (value) => value.toLocaleString('en-US'),\r\n        },\r\n        {\r\n            id: 'score',\r\n            label: 'Score (bottles + total capital)',\r\n            minWidth: 170,\r\n            format: (value) => value.toLocaleString('en-US'),\r\n        },\r\n    ];\r\n\r\n    // userFromDb adds score value to every user, then the array gets sorted by score (descending) --> leaderboard now puts best player on top\r\n    const rows = usersFromDb.map((u, i) => ({\r\n        ...u,\r\n        score: u.bottleAmount + u.totalCapital\r\n    })).sort((a, b) => parseFloat(b.score) - parseFloat(a.score));\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return <Paper sx={{ width: '100%' }}>\r\n        <TableContainer sx={{ maxHeight: 440 }}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\" colSpan={2}>\r\n                            Name\r\n                        </TableCell>\r\n                        <TableCell align=\"center\" colSpan={3}>\r\n                            Details\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        {columns.map((column) => (\r\n                            <TableCell\r\n                                key={column.id}\r\n                                align={column.align}\r\n                                style={{ top: 57, minWidth: column.minWidth }}\r\n                            >\r\n                                {column.label}\r\n                            </TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, key) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={key}>\r\n                                    {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                {column.format && typeof value === 'number'\r\n                                                    ? column.format(value)\r\n                                                    : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            rowsPerPage={rowsPerPage}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            page={page}\r\n            count={rows.length}\r\n        />\r\n    </Paper>\r\n}","import {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {LeaderBoardContent} from \"./LeaderBoardContent\";\r\n\r\nexport function LeaderBoardAccordion(props) {\r\n\r\n    return <>\r\n        <Accordion>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography>Leaderboard</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <LeaderBoardContent/>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    </>\r\n}","import 'normalize.css';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./services/firestore\"\r\nimport {Dashboard} from \"./componenten/Dashboard\";\r\nimport {WorkerProvider} from \"./context/workerContext\";\r\nimport {BottleProvider} from \"./context/bottleContext\";\r\nimport {CapitalProvider} from \"./context/capitalContext\";\r\nimport {SalesPersonProvider} from \"./context/salesPersonContext\";\r\nimport {ProductionManagerProvider} from \"./context/productionManagerContext\";\r\nimport {SalesManagerProvider} from \"./context/salesManagerContext\";\r\nimport {ManagerHiringProvider} from \"./context/managerHiringContext\";\r\nimport {LeaderBoardAccordion} from \"./componenten/LeaderBoardAccordion\";\r\nimport {InfoProvider} from \"./context/infoContext\";\r\n\r\nfunction ProvidedApp() {\r\n    return <div className=\"App\">\r\n        <LeaderBoardAccordion/>\r\n        <Dashboard/>\r\n    </div>\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n      <BottleProvider>\r\n          <CapitalProvider>\r\n              <WorkerProvider>\r\n                  <SalesPersonProvider>\r\n                      <ProductionManagerProvider>\r\n                          <SalesManagerProvider>\r\n                              <ManagerHiringProvider>\r\n                                  <InfoProvider>\r\n                                    <ProvidedApp/>\r\n                                  </InfoProvider>\r\n                              </ManagerHiringProvider>\r\n                          </SalesManagerProvider>\r\n                      </ProductionManagerProvider>\r\n                  </SalesPersonProvider>\r\n              </WorkerProvider>\r\n          </CapitalProvider>\r\n      </BottleProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}